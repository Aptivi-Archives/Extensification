{
  "api/Extensification.ArrayExts.Addition.html": {
    "href": "api/Extensification.ArrayExts.Addition.html",
    "title": "Class Addition | Extensification API - Eofla Internals",
    "keywords": "Class Addition Provides the array extensions related to addition Inheritance System.Object Addition Namespace : Extensification.ArrayExts Assembly : Extensification.dll Syntax public static class Addition Methods | Improve this Doc View Source Add<T>(T[], T) Adds an entry to array Declaration public static T[] Add<T>(this T[] TargetArray, T Item) Parameters Type Name Description T[] TargetArray Target array T Item Any item Returns Type Description T[] Type Parameters Name Description T Type | Improve this Doc View Source AddRange<T>(T[], T[]) Adds a range of entries to array Declaration public static T[] AddRange<T>(this T[] TargetArray, T[] ToBeAdded) Parameters Type Name Description T[] TargetArray Target array T[] ToBeAdded Range of entries in an array Returns Type Description T[] Type Parameters Name Description T Type"
  },
  "api/Extensification.ArrayExts.Conversion.html": {
    "href": "api/Extensification.ArrayExts.Conversion.html",
    "title": "Class Conversion | Extensification API - Eofla Internals",
    "keywords": "Class Conversion Provides the array extensions related to conversion Inheritance System.Object Conversion Namespace : Extensification.ArrayExts Assembly : Extensification.dll Syntax public static class Conversion Methods | Improve this Doc View Source ToArrayList<T>(T[]) Converts array to array list Declaration public static ArrayList ToArrayList<T>(this T[] TargetArray) Parameters Type Name Description T[] TargetArray Target array Returns Type Description System.Collections.ArrayList An array list of an array Type Parameters Name Description T Type"
  },
  "api/Extensification.ArrayExts.Counts.html": {
    "href": "api/Extensification.ArrayExts.Counts.html",
    "title": "Class Counts | Extensification API - Eofla Internals",
    "keywords": "Class Counts Provides the array extensions related to counting Inheritance System.Object Counts Namespace : Extensification.ArrayExts Assembly : Extensification.dll Syntax public static class Counts Methods | Improve this Doc View Source CountEmptyEntries<T>(T[]) Gets how many empty items are there Declaration public static long CountEmptyEntries<T>(this T[] TargetArray) Parameters Type Name Description T[] TargetArray Target array Returns Type Description System.Int64 Count of empty items Type Parameters Name Description T Type | Improve this Doc View Source CountFullEntries<T>(T[]) Gets how many non-empty items are there Declaration public static long CountFullEntries<T>(this T[] TargetArray) Parameters Type Name Description T[] TargetArray Target array Returns Type Description System.Int64 Count of non-empty items Type Parameters Name Description T Type"
  },
  "api/Extensification.ArrayExts.Getting.html": {
    "href": "api/Extensification.ArrayExts.Getting.html",
    "title": "Class Getting | Extensification API - Eofla Internals",
    "keywords": "Class Getting Provides the array extensions related to getting Inheritance System.Object Getting Namespace : Extensification.ArrayExts Assembly : Extensification.dll Syntax public static class Getting Methods | Improve this Doc View Source GetIndexesOfEmptyEntries<T>(T[]) Gets indexes of empty items Declaration public static int[] GetIndexesOfEmptyEntries<T>(this T[] TargetArray) Parameters Type Name Description T[] TargetArray Target array Returns Type Description System.Int32 [] Indexes of empty items Type Parameters Name Description T Type | Improve this Doc View Source GetIndexesOfFullEntries<T>(T[]) Gets indexes of non-empty items Declaration public static int[] GetIndexesOfFullEntries<T>(this T[] TargetArray) Parameters Type Name Description T[] TargetArray Target array Returns Type Description System.Int32 [] Indexes of non-empty items Type Parameters Name Description T Type | Improve this Doc View Source GetIndexFromEntry<T>(T[], T) Gets index from entry Declaration public static int[] GetIndexFromEntry<T>(this T[] TargetArray, T Entry) Parameters Type Name Description T[] TargetArray Target array T Entry An entry from array Returns Type Description System.Int32 [] List of indexes. If none is found, returns an empty array list Type Parameters Name Description T Type"
  },
  "api/Extensification.ArrayExts.html": {
    "href": "api/Extensification.ArrayExts.html",
    "title": "Namespace Extensification.ArrayExts | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification.ArrayExts Classes Addition Provides the array extensions related to addition Conversion Provides the array extensions related to conversion Counts Provides the array extensions related to counting Getting Provides the array extensions related to getting Manipulation Provides the array extensions related to manipulation Querying Provides the array extensions related to querying Removal Provides the array extensions related to removal"
  },
  "api/Extensification.ArrayExts.Manipulation.html": {
    "href": "api/Extensification.ArrayExts.Manipulation.html",
    "title": "Class Manipulation | Extensification API - Eofla Internals",
    "keywords": "Class Manipulation Provides the array extensions related to manipulation Inheritance System.Object Manipulation Namespace : Extensification.ArrayExts Assembly : Extensification.dll Syntax public static class Manipulation Methods | Improve this Doc View Source Stringify(Char[]) Stringifies the character array (making a string from the character entries found inside the array) Declaration public static string Stringify(this char[] TargetCharArray) Parameters Type Name Description System.Char [] TargetCharArray Character array Returns Type Description System.String"
  },
  "api/Extensification.ArrayExts.Querying.html": {
    "href": "api/Extensification.ArrayExts.Querying.html",
    "title": "Class Querying | Extensification API - Eofla Internals",
    "keywords": "Class Querying Provides the array extensions related to querying Inheritance System.Object Querying Namespace : Extensification.ArrayExts Assembly : Extensification.dll Syntax public static class Querying Methods | Improve this Doc View Source ContainsAllOf<T>(T[], T[]) Checks to see if the array contains all of the targets. Declaration public static bool ContainsAllOf<T>(this T[] TargetArray, T[] Targets) Parameters Type Name Description T[] TargetArray Source array T[] Targets Target array Returns Type Description System.Boolean True if all of them are found; else, false. Type Parameters Name Description T | Improve this Doc View Source ContainsAnyOf<T>(T[], T[]) Checks to see if the array contains any of the targets. Declaration public static bool ContainsAnyOf<T>(this T[] TargetArray, T[] Targets) Parameters Type Name Description T[] TargetArray Source array T[] Targets Target array Returns Type Description System.Boolean True if all of them are found; else, false. Type Parameters Name Description T"
  },
  "api/Extensification.ArrayExts.Removal.html": {
    "href": "api/Extensification.ArrayExts.Removal.html",
    "title": "Class Removal | Extensification API - Eofla Internals",
    "keywords": "Class Removal Provides the array extensions related to removal Inheritance System.Object Removal Namespace : Extensification.ArrayExts Assembly : Extensification.dll Syntax public static class Removal Methods | Improve this Doc View Source Remove<T>(T[], T) Removes an entry from array Declaration public static T[] Remove<T>(this T[] TargetArray, T Item) Parameters Type Name Description T[] TargetArray Target array T Item Any item Returns Type Description T[] Type Parameters Name Description T Type"
  },
  "api/Extensification.ArrayListExts.Conversion.html": {
    "href": "api/Extensification.ArrayListExts.Conversion.html",
    "title": "Class Conversion | Extensification API - Eofla Internals",
    "keywords": "Class Conversion Provides the array list extensions related to conversion Inheritance System.Object Conversion Namespace : Extensification.ArrayListExts Assembly : Extensification.dll Syntax public static class Conversion Methods | Improve this Doc View Source ToList(ArrayList) Converts an array list to list of System.Object . Declaration public static List<object> ToList(this ArrayList TargetArray) Parameters Type Name Description System.Collections.ArrayList TargetArray Target array list Returns Type Description System.Collections.Generic.List < System.Object > A list from array list"
  },
  "api/Extensification.ArrayListExts.Counts.html": {
    "href": "api/Extensification.ArrayListExts.Counts.html",
    "title": "Class Counts | Extensification API - Eofla Internals",
    "keywords": "Class Counts Provides the array list extensions related to counting Inheritance System.Object Counts Namespace : Extensification.ArrayListExts Assembly : Extensification.dll Syntax public static class Counts Methods | Improve this Doc View Source CountEmptyEntries(ArrayList) Gets how many empty items are there Declaration public static long CountEmptyEntries(this ArrayList TargetArray) Parameters Type Name Description System.Collections.ArrayList TargetArray Target array Returns Type Description System.Int64 Count of empty items | Improve this Doc View Source CountFullEntries(ArrayList) Gets how many non-empty items are there Declaration public static long CountFullEntries(this ArrayList TargetArray) Parameters Type Name Description System.Collections.ArrayList TargetArray Target array Returns Type Description System.Int64 Count of non-empty items"
  },
  "api/Extensification.ArrayListExts.Getting.html": {
    "href": "api/Extensification.ArrayListExts.Getting.html",
    "title": "Class Getting | Extensification API - Eofla Internals",
    "keywords": "Class Getting Provides the array list extensions related to getting Inheritance System.Object Getting Namespace : Extensification.ArrayListExts Assembly : Extensification.dll Syntax public static class Getting Methods | Improve this Doc View Source GetIndexesOfEmptyEntries(ArrayList) Gets indexes of empty items Declaration public static int[] GetIndexesOfEmptyEntries(this ArrayList TargetArray) Parameters Type Name Description System.Collections.ArrayList TargetArray Target array Returns Type Description System.Int32 [] Indexes of empty items | Improve this Doc View Source GetIndexesOfFullEntries(ArrayList) Gets indexes of non-empty items Declaration public static int[] GetIndexesOfFullEntries(this ArrayList TargetArray) Parameters Type Name Description System.Collections.ArrayList TargetArray Target array Returns Type Description System.Int32 [] Indexes of non-empty items | Improve this Doc View Source GetIndexOfEntry(ArrayList, Object) Gets index of an entry from the list Declaration public static ArrayList GetIndexOfEntry(this ArrayList TargetArray, object Entry) Parameters Type Name Description System.Collections.ArrayList TargetArray Target array list System.Object Entry An entry found in the list Returns Type Description System.Collections.ArrayList List of indexes. If none is found, returns an empty array list"
  },
  "api/Extensification.ArrayListExts.html": {
    "href": "api/Extensification.ArrayListExts.html",
    "title": "Namespace Extensification.ArrayListExts | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification.ArrayListExts Classes Conversion Provides the array list extensions related to conversion Counts Provides the array list extensions related to counting Getting Provides the array list extensions related to getting Querying Provides the array list extensions related to querying Removal Provides the array list extensions related to removal"
  },
  "api/Extensification.ArrayListExts.Querying.html": {
    "href": "api/Extensification.ArrayListExts.Querying.html",
    "title": "Class Querying | Extensification API - Eofla Internals",
    "keywords": "Class Querying Provides the array list extensions related to querying Inheritance System.Object Querying Namespace : Extensification.ArrayListExts Assembly : Extensification.dll Syntax public static class Querying Methods | Improve this Doc View Source ContainsAllOf(ArrayList, ArrayList) Checks to see if the array contains all of the targets. Declaration public static bool ContainsAllOf(this ArrayList TargetArray, ArrayList Targets) Parameters Type Name Description System.Collections.ArrayList TargetArray Source array System.Collections.ArrayList Targets Target array Returns Type Description System.Boolean True if all of them are found; else, false. | Improve this Doc View Source ContainsAnyOf(ArrayList, ArrayList) Checks to see if the array contains any of the targets. Declaration public static bool ContainsAnyOf(this ArrayList TargetArray, ArrayList Targets) Parameters Type Name Description System.Collections.ArrayList TargetArray Source array System.Collections.ArrayList Targets Target array Returns Type Description System.Boolean True if all of them are found; else, false."
  },
  "api/Extensification.ArrayListExts.Removal.html": {
    "href": "api/Extensification.ArrayListExts.Removal.html",
    "title": "Class Removal | Extensification API - Eofla Internals",
    "keywords": "Class Removal Provides the array list extensions related to removal Inheritance System.Object Removal Namespace : Extensification.ArrayListExts Assembly : Extensification.dll Syntax public static class Removal Methods | Improve this Doc View Source TryRemove(ArrayList, Object) Tries to remove an entry from the array list Declaration public static bool TryRemove(this ArrayList TargetArray, object Entry) Parameters Type Name Description System.Collections.ArrayList TargetArray Target array list System.Object Entry An entry to be removed Returns Type Description System.Boolean True if successful; False if unsuccessful"
  },
  "api/Extensification.ByteExts.html": {
    "href": "api/Extensification.ByteExts.html",
    "title": "Namespace Extensification.ByteExts | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification.ByteExts Classes Manipulation Provides the byte extensions related to manipulation Querying Provides the byte extensions related to querying"
  },
  "api/Extensification.ByteExts.Manipulation.html": {
    "href": "api/Extensification.ByteExts.Manipulation.html",
    "title": "Class Manipulation | Extensification API - Eofla Internals",
    "keywords": "Class Manipulation Provides the byte extensions related to manipulation Inheritance System.Object Manipulation Namespace : Extensification.ByteExts Assembly : Extensification.dll Syntax public static class Manipulation Methods | Improve this Doc View Source Decrement(Byte, Byte) Decrements the number Declaration public static byte Decrement(this byte Number, byte DecrementThreshold) Parameters Type Name Description System.Byte Number Number System.Byte DecrementThreshold How many times to decrement Returns Type Description System.Byte Decremented number | Improve this Doc View Source Decrement(SByte, SByte) Decrements the number Declaration public static sbyte Decrement(this sbyte Number, sbyte DecrementThreshold) Parameters Type Name Description System.SByte Number Number System.SByte DecrementThreshold How many times to decrement Returns Type Description System.SByte Decremented number | Improve this Doc View Source Increment(Byte, Byte) Increments the number Declaration public static byte Increment(this byte Number, byte IncrementThreshold) Parameters Type Name Description System.Byte Number Number System.Byte IncrementThreshold How many times to increment Returns Type Description System.Byte Incremented number | Improve this Doc View Source Increment(SByte, SByte) Increments the number Declaration public static sbyte Increment(this sbyte Number, sbyte IncrementThreshold) Parameters Type Name Description System.SByte Number Number System.SByte IncrementThreshold How many times to increment Returns Type Description System.SByte Incremented number | Improve this Doc View Source Swap(ref Byte, ref Byte) Swaps the two numbers Declaration public static void Swap(this ref byte SourceNumber, ref byte TargetNumber) Parameters Type Name Description System.Byte SourceNumber Number System.Byte TargetNumber Number | Improve this Doc View Source Swap(ref SByte, ref SByte) Swaps the two numbers Declaration public static void Swap(this ref sbyte SourceNumber, ref sbyte TargetNumber) Parameters Type Name Description System.SByte SourceNumber Number System.SByte TargetNumber Number | Improve this Doc View Source SwapIfSourceLarger(ref Byte, ref Byte) Swaps the two numbers if the source is larger than the target Declaration public static void SwapIfSourceLarger(this ref byte SourceNumber, ref byte TargetNumber) Parameters Type Name Description System.Byte SourceNumber Number System.Byte TargetNumber Number | Improve this Doc View Source SwapIfSourceLarger(ref SByte, ref SByte) Swaps the two numbers if the source is larger than the target Declaration public static void SwapIfSourceLarger(this ref sbyte SourceNumber, ref sbyte TargetNumber) Parameters Type Name Description System.SByte SourceNumber Number System.SByte TargetNumber Number | Improve this Doc View Source SwapIfTargetLarger(ref Byte, ref Byte) Swaps the two numbers if the target is larger than the target Declaration public static void SwapIfTargetLarger(this ref byte SourceNumber, ref byte TargetNumber) Parameters Type Name Description System.Byte SourceNumber Number System.Byte TargetNumber Number | Improve this Doc View Source SwapIfTargetLarger(ref SByte, ref SByte) Swaps the two numbers if the target is larger than the target Declaration public static void SwapIfTargetLarger(this ref sbyte SourceNumber, ref sbyte TargetNumber) Parameters Type Name Description System.SByte SourceNumber Number System.SByte TargetNumber Number"
  },
  "api/Extensification.ByteExts.Querying.html": {
    "href": "api/Extensification.ByteExts.Querying.html",
    "title": "Class Querying | Extensification API - Eofla Internals",
    "keywords": "Class Querying Provides the byte extensions related to querying Inheritance System.Object Querying Namespace : Extensification.ByteExts Assembly : Extensification.dll Syntax public static class Querying Methods | Improve this Doc View Source IsArmstrong(Byte) Checks to see if the number is an Armstrong number (sum of cube of each digit of number equals the number itself) Declaration public static bool IsArmstrong(this byte Number) Parameters Type Name Description System.Byte Number Number Returns Type Description System.Boolean True if the number is an Armstrong number; False if not. | Improve this Doc View Source IsArmstrong(SByte) Checks to see if the number is an Armstrong number (sum of cube of each digit of number equals the number itself) Declaration public static bool IsArmstrong(this sbyte Number) Parameters Type Name Description System.SByte Number Number Returns Type Description System.Boolean True if the number is an Armstrong number; False if not. | Improve this Doc View Source ListDigits(Byte) Makes a list of digits Declaration public static byte[] ListDigits(this byte Number) Parameters Type Name Description System.Byte Number Number Returns Type Description System.Byte [] Array of digits | Improve this Doc View Source ListDigits(SByte) Makes a list of digits Declaration public static sbyte[] ListDigits(this sbyte Number) Parameters Type Name Description System.SByte Number Number Returns Type Description System.SByte [] Array of digits"
  },
  "api/Extensification.CharExts.html": {
    "href": "api/Extensification.CharExts.html",
    "title": "Namespace Extensification.CharExts | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification.CharExts Classes Manipulation Provides the character extensions related to manipulation Querying Provides the character extensions related to querying"
  },
  "api/Extensification.CharExts.Manipulation.html": {
    "href": "api/Extensification.CharExts.Manipulation.html",
    "title": "Class Manipulation | Extensification API - Eofla Internals",
    "keywords": "Class Manipulation Provides the character extensions related to manipulation Inheritance System.Object Manipulation Namespace : Extensification.CharExts Assembly : Extensification.dll Syntax public static class Manipulation Methods | Improve this Doc View Source Decrement(Char, Int32) Decrements the character Declaration public static char Decrement(this char Character, int DecrementThreshold) Parameters Type Name Description System.Char Character Character System.Int32 DecrementThreshold How many times to decrement Returns Type Description System.Char Decremented character | Improve this Doc View Source Increment(Char, Int32) Increments the character Declaration public static char Increment(this char Character, int IncrementThreshold) Parameters Type Name Description System.Char Character Character System.Int32 IncrementThreshold How many times to increment Returns Type Description System.Char Incremented character"
  },
  "api/Extensification.CharExts.Querying.html": {
    "href": "api/Extensification.CharExts.Querying.html",
    "title": "Class Querying | Extensification API - Eofla Internals",
    "keywords": "Class Querying Provides the character extensions related to querying Inheritance System.Object Querying Namespace : Extensification.CharExts Assembly : Extensification.dll Syntax public static class Querying Methods | Improve this Doc View Source GetAsciiCode(Char) Gets an ASCII code of a character Declaration public static int GetAsciiCode(this char Character) Parameters Type Name Description System.Char Character Character Returns Type Description System.Int32 ASCII code of a character | Improve this Doc View Source ToConsoleKeyInfo(Char) Converts the character to the instance of ConsoleKeyInfo Declaration public static ConsoleKeyInfo ToConsoleKeyInfo(this char c) Parameters Type Name Description System.Char c The character Returns Type Description System.ConsoleKeyInfo | Improve this Doc View Source ToConsoleKeyInfo(Char, Dictionary<Char, Tuple<ConsoleKey, ConsoleModifiers>>) Converts the character to the instance of ConsoleKeyInfo Declaration public static ConsoleKeyInfo ToConsoleKeyInfo(this char c, Dictionary<char, Tuple<ConsoleKey, ConsoleModifiers>> KeyCharMap) Parameters Type Name Description System.Char c The character System.Collections.Generic.Dictionary < System.Char , System.Tuple < System.ConsoleKey , System.ConsoleModifiers >> KeyCharMap Key character map Returns Type Description System.ConsoleKeyInfo"
  },
  "api/Extensification.DictionaryExts.Addition.html": {
    "href": "api/Extensification.DictionaryExts.Addition.html",
    "title": "Class Addition | Extensification API - Eofla Internals",
    "keywords": "Class Addition Provides the dictionary extensions related to addition Inheritance System.Object Addition Namespace : Extensification.DictionaryExts Assembly : Extensification.dll Syntax public static class Addition Methods | Improve this Doc View Source AddIfNotFound<TKey, TValue>(Dictionary<TKey, TValue>, TKey, TValue) Adds an entry to dictionary if not found Declaration public static void AddIfNotFound<TKey, TValue>(this Dictionary<TKey, TValue> Dict, TKey EntryKey, TValue EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, TValue> Dict Target dictionary TKey EntryKey A key entry to be added TValue EntryValue A value of entry Type Parameters Name Description TKey Key TValue Value | Improve this Doc View Source AddOrDecrement<TKey>(Dictionary<TKey, Byte>, TKey, Byte) Adds an entry or decrements a value of an already-existing entry to dictionary Declaration public static void AddOrDecrement<TKey>(this Dictionary<TKey, byte> Dict, TKey EntryKey, byte EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Byte > Dict Target dictionary TKey EntryKey A key entry to be added System.Byte EntryValue A value of entry, or a value to subtract from an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrDecrement<TKey>(Dictionary<TKey, Double>, TKey, Double) Adds an entry or decrements a value of an already-existing entry to dictionary Declaration public static void AddOrDecrement<TKey>(this Dictionary<TKey, double> Dict, TKey EntryKey, double EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Double > Dict Target dictionary TKey EntryKey A key entry to be added System.Double EntryValue A value of entry, or a value to subtract from an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrDecrement<TKey>(Dictionary<TKey, Int16>, TKey, Int16) Adds an entry or decrements a value of an already-existing entry to dictionary Declaration public static void AddOrDecrement<TKey>(this Dictionary<TKey, short> Dict, TKey EntryKey, short EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Int16 > Dict Target dictionary TKey EntryKey A key entry to be added System.Int16 EntryValue A value of entry, or a value to subtract from an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrDecrement<TKey>(Dictionary<TKey, Int32>, TKey, Int32) Adds an entry or decrements a value of an already-existing entry to dictionary Declaration public static void AddOrDecrement<TKey>(this Dictionary<TKey, int> Dict, TKey EntryKey, int EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Int32 > Dict Target dictionary TKey EntryKey A key entry to be added System.Int32 EntryValue A value of entry, or a value to subtract from an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrDecrement<TKey>(Dictionary<TKey, Int64>, TKey, Int64) Adds an entry or decrements a value of an already-existing entry to dictionary Declaration public static void AddOrDecrement<TKey>(this Dictionary<TKey, long> Dict, TKey EntryKey, long EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Int64 > Dict Target dictionary TKey EntryKey A key entry to be added System.Int64 EntryValue A value of entry, or a value to subtract from an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrDecrement<TKey>(Dictionary<TKey, SByte>, TKey, SByte) Adds an entry or decrements a value of an already-existing entry to dictionary Declaration public static void AddOrDecrement<TKey>(this Dictionary<TKey, sbyte> Dict, TKey EntryKey, sbyte EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.SByte > Dict Target dictionary TKey EntryKey A key entry to be added System.SByte EntryValue A value of entry, or a value to subtract from an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrDecrement<TKey>(Dictionary<TKey, Single>, TKey, Single) Adds an entry or decrements a value of an already-existing entry to dictionary Declaration public static void AddOrDecrement<TKey>(this Dictionary<TKey, float> Dict, TKey EntryKey, float EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Single > Dict Target dictionary TKey EntryKey A key entry to be added System.Single EntryValue A value of entry, or a value to subtract from an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrDecrement<TKey>(Dictionary<TKey, UInt16>, TKey, UInt16) Adds an entry or decrements a value of an already-existing entry to dictionary Declaration public static void AddOrDecrement<TKey>(this Dictionary<TKey, ushort> Dict, TKey EntryKey, ushort EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.UInt16 > Dict Target dictionary TKey EntryKey A key entry to be added System.UInt16 EntryValue A value of entry, or a value to subtract from an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrDecrement<TKey>(Dictionary<TKey, UInt32>, TKey, UInt32) Adds an entry or decrements a value of an already-existing entry to dictionary Declaration public static void AddOrDecrement<TKey>(this Dictionary<TKey, uint> Dict, TKey EntryKey, uint EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.UInt32 > Dict Target dictionary TKey EntryKey A key entry to be added System.UInt32 EntryValue A value of entry, or a value to subtract from an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrDecrement<TKey>(Dictionary<TKey, UInt64>, TKey, UInt64) Adds an entry or decrements a value of an already-existing entry to dictionary Declaration public static void AddOrDecrement<TKey>(this Dictionary<TKey, ulong> Dict, TKey EntryKey, ulong EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.UInt64 > Dict Target dictionary TKey EntryKey A key entry to be added System.UInt64 EntryValue A value of entry, or a value to subtract from an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrIncrement<TKey>(Dictionary<TKey, Byte>, TKey, Byte) Adds an entry or increments a value of an already-existing entry to dictionary Declaration public static void AddOrIncrement<TKey>(this Dictionary<TKey, byte> Dict, TKey EntryKey, byte EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Byte > Dict Target dictionary TKey EntryKey A key entry to be added System.Byte EntryValue A value of entry, or a value to add to an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrIncrement<TKey>(Dictionary<TKey, Double>, TKey, Double) Adds an entry or increments a value of an already-existing entry to dictionary Declaration public static void AddOrIncrement<TKey>(this Dictionary<TKey, double> Dict, TKey EntryKey, double EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Double > Dict Target dictionary TKey EntryKey A key entry to be added System.Double EntryValue A value of entry, or a value to add to an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrIncrement<TKey>(Dictionary<TKey, Int16>, TKey, Int16) Adds an entry or increments a value of an already-existing entry to dictionary Declaration public static void AddOrIncrement<TKey>(this Dictionary<TKey, short> Dict, TKey EntryKey, short EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Int16 > Dict Target dictionary TKey EntryKey A key entry to be added System.Int16 EntryValue A value of entry, or a value to add to an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrIncrement<TKey>(Dictionary<TKey, Int32>, TKey, Int32) Adds an entry or increments a value of an already-existing entry to dictionary Declaration public static void AddOrIncrement<TKey>(this Dictionary<TKey, int> Dict, TKey EntryKey, int EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Int32 > Dict Target dictionary TKey EntryKey A key entry to be added System.Int32 EntryValue A value of entry, or a value to add to an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrIncrement<TKey>(Dictionary<TKey, Int64>, TKey, Int64) Adds an entry or increments a value of an already-existing entry to dictionary Declaration public static void AddOrIncrement<TKey>(this Dictionary<TKey, long> Dict, TKey EntryKey, long EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Int64 > Dict Target dictionary TKey EntryKey A key entry to be added System.Int64 EntryValue A value of entry, or a value to add to an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrIncrement<TKey>(Dictionary<TKey, SByte>, TKey, SByte) Adds an entry or increments a value of an already-existing entry to dictionary Declaration public static void AddOrIncrement<TKey>(this Dictionary<TKey, sbyte> Dict, TKey EntryKey, sbyte EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.SByte > Dict Target dictionary TKey EntryKey A key entry to be added System.SByte EntryValue A value of entry, or a value to add to an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrIncrement<TKey>(Dictionary<TKey, Single>, TKey, Single) Adds an entry or increments a value of an already-existing entry to dictionary Declaration public static void AddOrIncrement<TKey>(this Dictionary<TKey, float> Dict, TKey EntryKey, float EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Single > Dict Target dictionary TKey EntryKey A key entry to be added System.Single EntryValue A value of entry, or a value to add to an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrIncrement<TKey>(Dictionary<TKey, UInt16>, TKey, UInt16) Adds an entry or increments a value of an already-existing entry to dictionary Declaration public static void AddOrIncrement<TKey>(this Dictionary<TKey, ushort> Dict, TKey EntryKey, ushort EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.UInt16 > Dict Target dictionary TKey EntryKey A key entry to be added System.UInt16 EntryValue A value of entry, or a value to add to an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrIncrement<TKey>(Dictionary<TKey, UInt32>, TKey, UInt32) Adds an entry or increments a value of an already-existing entry to dictionary Declaration public static void AddOrIncrement<TKey>(this Dictionary<TKey, uint> Dict, TKey EntryKey, uint EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.UInt32 > Dict Target dictionary TKey EntryKey A key entry to be added System.UInt32 EntryValue A value of entry, or a value to add to an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrIncrement<TKey>(Dictionary<TKey, UInt64>, TKey, UInt64) Adds an entry or increments a value of an already-existing entry to dictionary Declaration public static void AddOrIncrement<TKey>(this Dictionary<TKey, ulong> Dict, TKey EntryKey, ulong EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.UInt64 > Dict Target dictionary TKey EntryKey A key entry to be added System.UInt64 EntryValue A value of entry, or a value to add to an already-existing entry Type Parameters Name Description TKey Key | Improve this Doc View Source AddOrModify<TKey, TValue>(Dictionary<TKey, TValue>, TKey, TValue) Adds or modifies an entry to dictionary Declaration public static void AddOrModify<TKey, TValue>(this Dictionary<TKey, TValue> Dict, TKey EntryKey, TValue EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, TValue> Dict Target dictionary TKey EntryKey A key entry to be added TValue EntryValue A value of entry Type Parameters Name Description TKey Key TValue Value | Improve this Doc View Source AddOrRename<TValue>(Dictionary<String, TValue>, String, TValue) Adds or renames an entry to dictionary to identify the copy number Declaration public static void AddOrRename<TValue>(this Dictionary<string, TValue> Dict, string EntryKey, TValue EntryValue) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , TValue> Dict Target dictionary System.String EntryKey A key entry to be added TValue EntryValue A value of entry Type Parameters Name Description TValue Value"
  },
  "api/Extensification.DictionaryExts.Counts.html": {
    "href": "api/Extensification.DictionaryExts.Counts.html",
    "title": "Class Counts | Extensification API - Eofla Internals",
    "keywords": "Class Counts Provides the dictionary extensions related to counting Inheritance System.Object Counts Namespace : Extensification.DictionaryExts Assembly : Extensification.dll Syntax public static class Counts Methods | Improve this Doc View Source CountEmptyEntries<TKey, TValue>(Dictionary<TKey, TValue>) Gets how many empty values are there (Empty keys are not counted) Declaration public static int CountEmptyEntries<TKey, TValue>(this Dictionary<TKey, TValue> Dict) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, TValue> Dict Target dictionary Returns Type Description System.Int32 Count of empty values Type Parameters Name Description TKey Key TValue Value | Improve this Doc View Source CountFullEntries<TKey, TValue>(Dictionary<TKey, TValue>) Gets how many non-empty values are there (Empty keys are not counted) Declaration public static int CountFullEntries<TKey, TValue>(this Dictionary<TKey, TValue> Dict) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, TValue> Dict Target dictionary Returns Type Description System.Int32 Count of non-empty values Type Parameters Name Description TKey Key TValue Value"
  },
  "api/Extensification.DictionaryExts.Getting.html": {
    "href": "api/Extensification.DictionaryExts.Getting.html",
    "title": "Class Getting | Extensification API - Eofla Internals",
    "keywords": "Class Getting Provides the dictionary extensions related to getting Inheritance System.Object Getting Namespace : Extensification.DictionaryExts Assembly : Extensification.dll Syntax public static class Getting Methods | Improve this Doc View Source GetIndexesOfEmptyEntries<TKey, TValue>(Dictionary<TKey, TValue>) Gets indexes of empty items Declaration public static int[] GetIndexesOfEmptyEntries<TKey, TValue>(this Dictionary<TKey, TValue> Dict) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, TValue> Dict Target dictionary Returns Type Description System.Int32 [] Indexes of empty items Type Parameters Name Description TKey Key TValue Value | Improve this Doc View Source GetIndexesOfFullEntries<TKey, TValue>(Dictionary<TKey, TValue>) Gets indexes of non-empty items Declaration public static int[] GetIndexesOfFullEntries<TKey, TValue>(this Dictionary<TKey, TValue> Dict) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, TValue> Dict Target dictionary Returns Type Description System.Int32 [] Indexes of non-empty items Type Parameters Name Description TKey Key TValue Value | Improve this Doc View Source GetIndexOfKey<TKey, TValue>(Dictionary<TKey, TValue>, TKey) Gets an index from a key in the dictionary Declaration public static int GetIndexOfKey<TKey, TValue>(this Dictionary<TKey, TValue> Dict, TKey Key) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, TValue> Dict Source dictionary TKey Key Key Returns Type Description System.Int32 Index of key Type Parameters Name Description TKey Key TValue Value | Improve this Doc View Source GetIndexOfValue<TKey, TValue>(Dictionary<TKey, TValue>, TValue) Gets an index from a value in the dictionary Declaration public static int GetIndexOfValue<TKey, TValue>(this Dictionary<TKey, TValue> Dict, TValue Value) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, TValue> Dict Source dictionary TValue Value Value Returns Type Description System.Int32 Index of value Type Parameters Name Description TKey Key TValue Value | Improve this Doc View Source GetKeyFromValue<TKey, TValue>(Dictionary<TKey, TValue>, TValue) Gets a key from a value in the dictionary Declaration public static TKey GetKeyFromValue<TKey, TValue>(this Dictionary<TKey, TValue> Dict, TValue Value) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, TValue> Dict Source dictionary TValue Value Value Returns Type Description TKey Key from value Type Parameters Name Description TKey Key TValue Value"
  },
  "api/Extensification.DictionaryExts.html": {
    "href": "api/Extensification.DictionaryExts.html",
    "title": "Namespace Extensification.DictionaryExts | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification.DictionaryExts Classes Addition Provides the dictionary extensions related to addition Counts Provides the dictionary extensions related to counting Getting Provides the dictionary extensions related to getting Manipulation Provides the dictionary extensions related to manipulation Querying Provides the dictionary extensions related to querying"
  },
  "api/Extensification.DictionaryExts.Manipulation.html": {
    "href": "api/Extensification.DictionaryExts.Manipulation.html",
    "title": "Class Manipulation | Extensification API - Eofla Internals",
    "keywords": "Class Manipulation Provides the dictionary extensions related to manipulation Inheritance System.Object Manipulation Namespace : Extensification.DictionaryExts Assembly : Extensification.dll Syntax public static class Manipulation Methods | Improve this Doc View Source DecrementNumber<TKey>(Dictionary<TKey, Byte>, TKey) Decrements number value in key. The key will be created if not found. Declaration public static void DecrementNumber<TKey>(this Dictionary<TKey, byte> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Byte > Dict Target dictionary TKey EntryKey A key entry to be decremented Type Parameters Name Description TKey Key | Improve this Doc View Source DecrementNumber<TKey>(Dictionary<TKey, Double>, TKey) Decrements number value in key. The key will be created if not found. Declaration public static void DecrementNumber<TKey>(this Dictionary<TKey, double> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Double > Dict Target dictionary TKey EntryKey A key entry to be decremented Type Parameters Name Description TKey Key | Improve this Doc View Source DecrementNumber<TKey>(Dictionary<TKey, Int16>, TKey) Decrements number value in key. The key will be created if not found. Declaration public static void DecrementNumber<TKey>(this Dictionary<TKey, short> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Int16 > Dict Target dictionary TKey EntryKey A key entry to be decremented Type Parameters Name Description TKey Key | Improve this Doc View Source DecrementNumber<TKey>(Dictionary<TKey, Int32>, TKey) Decrements number value in key. The key will be created if not found. Declaration public static void DecrementNumber<TKey>(this Dictionary<TKey, int> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Int32 > Dict Target dictionary TKey EntryKey A key entry to be decremented Type Parameters Name Description TKey Key | Improve this Doc View Source DecrementNumber<TKey>(Dictionary<TKey, Int64>, TKey) Decrements number value in key. The key will be created if not found. Declaration public static void DecrementNumber<TKey>(this Dictionary<TKey, long> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Int64 > Dict Target dictionary TKey EntryKey A key entry to be decremented Type Parameters Name Description TKey Key | Improve this Doc View Source DecrementNumber<TKey>(Dictionary<TKey, SByte>, TKey) Decrements number value in key. The key will be created if not found. Declaration public static void DecrementNumber<TKey>(this Dictionary<TKey, sbyte> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.SByte > Dict Target dictionary TKey EntryKey A key entry to be decremented Type Parameters Name Description TKey Key | Improve this Doc View Source DecrementNumber<TKey>(Dictionary<TKey, Single>, TKey) Decrements number value in key. The key will be created if not found. Declaration public static void DecrementNumber<TKey>(this Dictionary<TKey, float> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Single > Dict Target dictionary TKey EntryKey A key entry to be decremented Type Parameters Name Description TKey Key | Improve this Doc View Source DecrementNumber<TKey>(Dictionary<TKey, UInt16>, TKey) Decrements number value in key. The key will be created if not found. Declaration public static void DecrementNumber<TKey>(this Dictionary<TKey, ushort> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.UInt16 > Dict Target dictionary TKey EntryKey A key entry to be decremented Type Parameters Name Description TKey Key | Improve this Doc View Source DecrementNumber<TKey>(Dictionary<TKey, UInt32>, TKey) Decrements number value in key. The key will be created if not found. Declaration public static void DecrementNumber<TKey>(this Dictionary<TKey, uint> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.UInt32 > Dict Target dictionary TKey EntryKey A key entry to be decremented Type Parameters Name Description TKey Key | Improve this Doc View Source DecrementNumber<TKey>(Dictionary<TKey, UInt64>, TKey) Decrements number value in key. The key will be created if not found. Declaration public static void DecrementNumber<TKey>(this Dictionary<TKey, ulong> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.UInt64 > Dict Target dictionary TKey EntryKey A key entry to be decremented Type Parameters Name Description TKey Key | Improve this Doc View Source IncrementNumber<TKey>(Dictionary<TKey, Byte>, TKey) Increments number value in key. The key will be created if not found. Declaration public static void IncrementNumber<TKey>(this Dictionary<TKey, byte> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Byte > Dict Target dictionary TKey EntryKey A key entry to be incremented Type Parameters Name Description TKey Key | Improve this Doc View Source IncrementNumber<TKey>(Dictionary<TKey, Double>, TKey) Increments number value in key. The key will be created if not found. Declaration public static void IncrementNumber<TKey>(this Dictionary<TKey, double> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Double > Dict Target dictionary TKey EntryKey A key entry to be incremented Type Parameters Name Description TKey Key | Improve this Doc View Source IncrementNumber<TKey>(Dictionary<TKey, Int16>, TKey) Increments number value in key. The key will be created if not found. Declaration public static void IncrementNumber<TKey>(this Dictionary<TKey, short> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Int16 > Dict Target dictionary TKey EntryKey A key entry to be incremented Type Parameters Name Description TKey Key | Improve this Doc View Source IncrementNumber<TKey>(Dictionary<TKey, Int32>, TKey) Increments number value in key. The key will be created if not found. Declaration public static void IncrementNumber<TKey>(this Dictionary<TKey, int> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Int32 > Dict Target dictionary TKey EntryKey A key entry to be incremented Type Parameters Name Description TKey Key | Improve this Doc View Source IncrementNumber<TKey>(Dictionary<TKey, Int64>, TKey) Increments number value in key. The key will be created if not found. Declaration public static void IncrementNumber<TKey>(this Dictionary<TKey, long> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Int64 > Dict Target dictionary TKey EntryKey A key entry to be incremented Type Parameters Name Description TKey Key | Improve this Doc View Source IncrementNumber<TKey>(Dictionary<TKey, SByte>, TKey) Increments number value in key. The key will be created if not found. Declaration public static void IncrementNumber<TKey>(this Dictionary<TKey, sbyte> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.SByte > Dict Target dictionary TKey EntryKey A key entry to be incremented Type Parameters Name Description TKey Key | Improve this Doc View Source IncrementNumber<TKey>(Dictionary<TKey, Single>, TKey) Increments number value in key. The key will be created if not found. Declaration public static void IncrementNumber<TKey>(this Dictionary<TKey, float> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.Single > Dict Target dictionary TKey EntryKey A key entry to be incremented Type Parameters Name Description TKey Key | Improve this Doc View Source IncrementNumber<TKey>(Dictionary<TKey, UInt16>, TKey) Increments number value in key. The key will be created if not found. Declaration public static void IncrementNumber<TKey>(this Dictionary<TKey, ushort> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.UInt16 > Dict Target dictionary TKey EntryKey A key entry to be incremented Type Parameters Name Description TKey Key | Improve this Doc View Source IncrementNumber<TKey>(Dictionary<TKey, UInt32>, TKey) Increments number value in key. The key will be created if not found. Declaration public static void IncrementNumber<TKey>(this Dictionary<TKey, uint> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.UInt32 > Dict Target dictionary TKey EntryKey A key entry to be incremented Type Parameters Name Description TKey Key | Improve this Doc View Source IncrementNumber<TKey>(Dictionary<TKey, UInt64>, TKey) Increments number value in key. The key will be created if not found. Declaration public static void IncrementNumber<TKey>(this Dictionary<TKey, ulong> Dict, TKey EntryKey) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, System.UInt64 > Dict Target dictionary TKey EntryKey A key entry to be incremented Type Parameters Name Description TKey Key | Improve this Doc View Source RenameKey<TValue>(Dictionary<String, TValue>, String, String) Renames a key in a dictionary that has the key type of string Declaration public static void RenameKey<TValue>(this Dictionary<string, TValue> Dict, string OldName, string NewName) Parameters Type Name Description System.Collections.Generic.Dictionary < System.String , TValue> Dict Target dictionary System.String OldName Original key name System.String NewName New key name Type Parameters Name Description TValue Value Exceptions Type Condition System.Collections.Generic.KeyNotFoundException"
  },
  "api/Extensification.DictionaryExts.Querying.html": {
    "href": "api/Extensification.DictionaryExts.Querying.html",
    "title": "Class Querying | Extensification API - Eofla Internals",
    "keywords": "Class Querying Provides the dictionary extensions related to querying Inheritance System.Object Querying Namespace : Extensification.DictionaryExts Assembly : Extensification.dll Syntax public static class Querying Methods | Improve this Doc View Source ContainsAllOfInKeys<TKey, TValue>(Dictionary<TKey, TValue>, TKey[]) Checks to see if the keys in dictionary contains all of the targets. Declaration public static bool ContainsAllOfInKeys<TKey, TValue>(this Dictionary<TKey, TValue> Dict, TKey[] Targets) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, TValue> Dict Source dictionary TKey[] Targets Target dictionary Returns Type Description System.Boolean True if all of them are found; else, false. Type Parameters Name Description TKey TValue | Improve this Doc View Source ContainsAllOfInValues<TKey, TValue>(Dictionary<TKey, TValue>, TValue[]) Checks to see if the values in dictionary contains all of the targets. Declaration public static bool ContainsAllOfInValues<TKey, TValue>(this Dictionary<TKey, TValue> Dict, TValue[] Targets) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, TValue> Dict Source dictionary TValue[] Targets Target dictionary Returns Type Description System.Boolean True if all of them are found; else, false. Type Parameters Name Description TKey TValue | Improve this Doc View Source ContainsAnyOfInKeys<TKey, TValue>(Dictionary<TKey, TValue>, TKey[]) Checks to see if the keys in dictionary contains any of the targets. Declaration public static bool ContainsAnyOfInKeys<TKey, TValue>(this Dictionary<TKey, TValue> Dict, TKey[] Targets) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, TValue> Dict Source dictionary TKey[] Targets Target dictionary Returns Type Description System.Boolean True if all of them are found; else, false. Type Parameters Name Description TKey TValue | Improve this Doc View Source ContainsAnyOfInValues<TKey, TValue>(Dictionary<TKey, TValue>, TValue[]) Checks to see if the values in dictionary contains any of the targets. Declaration public static bool ContainsAnyOfInValues<TKey, TValue>(this Dictionary<TKey, TValue> Dict, TValue[] Targets) Parameters Type Name Description System.Collections.Generic.Dictionary <TKey, TValue> Dict Source dictionary TValue[] Targets Target dictionary Returns Type Description System.Boolean True if all of them are found; else, false. Type Parameters Name Description TKey TValue"
  },
  "api/Extensification.DoubleExts.html": {
    "href": "api/Extensification.DoubleExts.html",
    "title": "Namespace Extensification.DoubleExts | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification.DoubleExts Classes Manipulation Provides the double-precision number extensions related to manipulation Querying Provides the double-precision number extensions related to querying"
  },
  "api/Extensification.DoubleExts.Manipulation.html": {
    "href": "api/Extensification.DoubleExts.Manipulation.html",
    "title": "Class Manipulation | Extensification API - Eofla Internals",
    "keywords": "Class Manipulation Provides the double-precision number extensions related to manipulation Inheritance System.Object Manipulation Namespace : Extensification.DoubleExts Assembly : Extensification.dll Syntax public static class Manipulation Methods | Improve this Doc View Source Decrement(Double, Double) Decrements the number Declaration public static double Decrement(this double Number, double DecrementThreshold) Parameters Type Name Description System.Double Number Number System.Double DecrementThreshold How many times to decrement Returns Type Description System.Double Decremented number | Improve this Doc View Source Increment(Double, Double) Increments the number Declaration public static double Increment(this double Number, double IncrementThreshold) Parameters Type Name Description System.Double Number Number System.Double IncrementThreshold How many times to increment Returns Type Description System.Double Incremented number | Improve this Doc View Source Swap(ref Double, ref Double) Swaps the two numbers Declaration public static void Swap(this ref double SourceNumber, ref double TargetNumber) Parameters Type Name Description System.Double SourceNumber Number System.Double TargetNumber Number | Improve this Doc View Source SwapIfSourceLarger(ref Double, ref Double) Swaps the two numbers if the source is larger than the target Declaration public static void SwapIfSourceLarger(this ref double SourceNumber, ref double TargetNumber) Parameters Type Name Description System.Double SourceNumber Number System.Double TargetNumber Number | Improve this Doc View Source SwapIfTargetLarger(ref Double, ref Double) Swaps the two numbers if the target is larger than the target Declaration public static void SwapIfTargetLarger(this ref double SourceNumber, ref double TargetNumber) Parameters Type Name Description System.Double SourceNumber Number System.Double TargetNumber Number"
  },
  "api/Extensification.DoubleExts.Querying.html": {
    "href": "api/Extensification.DoubleExts.Querying.html",
    "title": "Class Querying | Extensification API - Eofla Internals",
    "keywords": "Class Querying Provides the double-precision number extensions related to querying Inheritance System.Object Querying Namespace : Extensification.DoubleExts Assembly : Extensification.dll Syntax public static class Querying Methods | Improve this Doc View Source IsArmstrong(Double) Checks to see if the number is an Armstrong number (sum of cube of each digit of number equals the number itself) Declaration public static bool IsArmstrong(this double Number) Parameters Type Name Description System.Double Number Number Returns Type Description System.Boolean True if the number is an Armstrong number; False if not. | Improve this Doc View Source ListDigitsAfterDecimal(Double) Makes a list of digits after the decimal point Declaration public static double[] ListDigitsAfterDecimal(this double Number) Parameters Type Name Description System.Double Number Number Returns Type Description System.Double [] Array of digits | Improve this Doc View Source ListDigitsBeforeDecimal(Double) Makes a list of digits before the decimal point Declaration public static double[] ListDigitsBeforeDecimal(this double Number) Parameters Type Name Description System.Double Number Number Returns Type Description System.Double [] Array of digits"
  },
  "api/Extensification.EnumerableExts.Addition.html": {
    "href": "api/Extensification.EnumerableExts.Addition.html",
    "title": "Class Addition | Extensification API - Eofla Internals",
    "keywords": "Class Addition Provides the enumerable extensions related to addition Inheritance System.Object Addition Namespace : Extensification.EnumerableExts Assembly : Extensification.dll Syntax public static class Addition Methods | Improve this Doc View Source Append<Source>(IEnumerable<Source>, Source) Appends a value to the end of the sequence Declaration public static IEnumerable<Source> Append<Source>(IEnumerable<Source> TargetEnumerable, Source Value) Parameters Type Name Description System.Collections.Generic.IEnumerable <Source> TargetEnumerable Source Source Value Value Returns Type Description System.Collections.Generic.IEnumerable <Source> Type Parameters Name Description Source Source type"
  },
  "api/Extensification.EnumerableExts.html": {
    "href": "api/Extensification.EnumerableExts.html",
    "title": "Namespace Extensification.EnumerableExts | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification.EnumerableExts Classes Addition Provides the enumerable extensions related to addition Manipulation Provides the enumerable extensions related to manipulation"
  },
  "api/Extensification.EnumerableExts.Manipulation.html": {
    "href": "api/Extensification.EnumerableExts.Manipulation.html",
    "title": "Class Manipulation | Extensification API - Eofla Internals",
    "keywords": "Class Manipulation Provides the enumerable extensions related to manipulation Inheritance System.Object Manipulation Namespace : Extensification.EnumerableExts Assembly : Extensification.dll Syntax public static class Manipulation Methods | Improve this Doc View Source Stringify(IEnumerable<Char>) Stringifies the character enumerable (making a string from the character entries found inside the enumerable) Declaration public static string Stringify(this IEnumerable<char> TargetCharArray) Parameters Type Name Description System.Collections.Generic.IEnumerable < System.Char > TargetCharArray Character enumerable Returns Type Description System.String"
  },
  "api/Extensification.External.Newtonsoft.Json.JPropertyExts.Getting.html": {
    "href": "api/Extensification.External.Newtonsoft.Json.JPropertyExts.Getting.html",
    "title": "Class Getting | Extensification API - Eofla Internals",
    "keywords": "Class Getting Provides the JProperty extensions related to getting Inheritance System.Object Getting Namespace : Extensification.External.Newtonsoft.Json.JPropertyExts Assembly : Extensification.External.dll Syntax public static class Getting : object Methods | Improve this Doc View Source GetPropertiesTypeInValue(JToken, JTokenType) Gets properties that have the specific type in value. Declaration public static List<JToken> GetPropertiesTypeInValue(this JToken Token, JTokenType Type) Parameters Type Name Description JToken Token JSON token JTokenType Type JSON token type to search. If the type is , returns all properties. Returns Type Description List < JToken > A property list if properties with specific type is found; empty list if nothing is found | Improve this Doc View Source GetPropertyNameContaining(JToken, String) Gets a property name that contains the specified string Declaration public static string GetPropertyNameContaining(this JToken Token, string Containing) Parameters Type Name Description JToken Token JSON token System.String Containing String to find in string Returns Type Description System.String A property name if found; nothing if not found | Improve this Doc View Source GetPropertyNameEndingWith(JToken, String) Gets a property name that ends with specified string Declaration public static string GetPropertyNameEndingWith(this JToken Token, string Containing) Parameters Type Name Description JToken Token JSON token System.String Containing String to find at the end of string Returns Type Description System.String A property name if found; nothing if not found | Improve this Doc View Source GetPropertyNameStartingWith(JToken, String) Gets a property name that starts with specified string Declaration public static string GetPropertyNameStartingWith(this JToken Token, string Containing) Parameters Type Name Description JToken Token JSON token System.String Containing String to find at the beginning of string Returns Type Description System.String A property name if found; nothing if not found"
  },
  "api/Extensification.External.Newtonsoft.Json.JPropertyExts.html": {
    "href": "api/Extensification.External.Newtonsoft.Json.JPropertyExts.html",
    "title": "Namespace Extensification.External.Newtonsoft.Json.JPropertyExts | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification.External.Newtonsoft.Json.JPropertyExts Classes Getting Provides the JProperty extensions related to getting Querying Provides the JProperty extensions related to querying"
  },
  "api/Extensification.External.Newtonsoft.Json.JPropertyExts.Querying.html": {
    "href": "api/Extensification.External.Newtonsoft.Json.JPropertyExts.Querying.html",
    "title": "Class Querying | Extensification API - Eofla Internals",
    "keywords": "Class Querying Provides the JProperty extensions related to querying Inheritance System.Object Querying Namespace : Extensification.External.Newtonsoft.Json.JPropertyExts Assembly : Extensification.External.dll Syntax public static class Querying : object Methods | Improve this Doc View Source SelectTokenKeyContaining(JToken, String) Selects a token that has its key containing the specified string Declaration public static JToken SelectTokenKeyContaining(this JToken Token, string Containing) Parameters Type Name Description JToken Token JSON token System.String Containing String to find in the key string Returns Type Description JToken A token if found; nothing if not found | Improve this Doc View Source SelectTokenKeyEndingWith(JToken, String) Selects a token that has its key ending with the specified string Declaration public static JToken SelectTokenKeyEndingWith(this JToken Token, string Containing) Parameters Type Name Description JToken Token JSON token System.String Containing String to find at the end of key string Returns Type Description JToken A token if found; nothing if not found | Improve this Doc View Source SelectTokenKeyStartingWith(JToken, String) Selects a token that has its key starting with the specified string Declaration public static JToken SelectTokenKeyStartingWith(this JToken Token, string Containing) Parameters Type Name Description JToken Token JSON token System.String Containing String to find at the beginning of key string Returns Type Description JToken A token if found; nothing if not found"
  },
  "api/Extensification.html": {
    "href": "api/Extensification.html",
    "title": "Namespace Extensification | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification Enums HumanFormats Human-readable formats"
  },
  "api/Extensification.HumanFormats.html": {
    "href": "api/Extensification.HumanFormats.html",
    "title": "Enum HumanFormats | Extensification API - Eofla Internals",
    "keywords": "Enum HumanFormats Human-readable formats Namespace : Extensification Assembly : Extensification.dll Syntax public enum HumanFormats Fields Name Description DataSize Computer data size (KB, MB, GB, TB, PB, EB, ...) MeasurementsImperial Body measurements in imperial units (feet, yards, miles, ...) MeasurementsMetric Body measurements in metric units (mm, cm, m, km, ...) MeasurementsMetricUnusual Body measurements in metric units (mm, cm, dm (Decimeters), m, dcm (Decameters), hm (Hectameters), km, ...) VolumeImperial Body volume in imperial units (pints, quarts, gallons, ...) VolumeMetric Body volume in metric units (mL, L, kL (Kiloliters))"
  },
  "api/Extensification.IntegerExts.html": {
    "href": "api/Extensification.IntegerExts.html",
    "title": "Namespace Extensification.IntegerExts | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification.IntegerExts Classes Manipulation Provides the integer extensions related to manipulation Querying Provides the integer extensions related to querying"
  },
  "api/Extensification.IntegerExts.Manipulation.html": {
    "href": "api/Extensification.IntegerExts.Manipulation.html",
    "title": "Class Manipulation | Extensification API - Eofla Internals",
    "keywords": "Class Manipulation Provides the integer extensions related to manipulation Inheritance System.Object Manipulation Namespace : Extensification.IntegerExts Assembly : Extensification.dll Syntax public static class Manipulation Methods | Improve this Doc View Source Decrement(Int32, Int32) Decrements the number Declaration public static int Decrement(this int Number, int DecrementThreshold) Parameters Type Name Description System.Int32 Number Number System.Int32 DecrementThreshold How many times to decrement Returns Type Description System.Int32 Decremented number | Improve this Doc View Source Decrement(UInt32, UInt32) Decrements the number Declaration public static uint Decrement(this uint Number, uint DecrementThreshold) Parameters Type Name Description System.UInt32 Number Number System.UInt32 DecrementThreshold How many times to decrement Returns Type Description System.UInt32 Decremented number | Improve this Doc View Source Increment(Int32, Int32) Increments the number Declaration public static int Increment(this int Number, int IncrementThreshold) Parameters Type Name Description System.Int32 Number Number System.Int32 IncrementThreshold How many times to increment Returns Type Description System.Int32 Incremented number | Improve this Doc View Source Increment(UInt32, UInt32) Increments the number Declaration public static uint Increment(this uint Number, uint IncrementThreshold) Parameters Type Name Description System.UInt32 Number Number System.UInt32 IncrementThreshold How many times to increment Returns Type Description System.UInt32 Incremented number | Improve this Doc View Source Swap(ref Int32, ref Int32) Swaps the two numbers Declaration public static void Swap(this ref int SourceNumber, ref int TargetNumber) Parameters Type Name Description System.Int32 SourceNumber Number System.Int32 TargetNumber Number | Improve this Doc View Source Swap(ref UInt32, ref UInt32) Swaps the two numbers Declaration public static void Swap(this ref uint SourceNumber, ref uint TargetNumber) Parameters Type Name Description System.UInt32 SourceNumber Number System.UInt32 TargetNumber Number | Improve this Doc View Source SwapIfSourceLarger(ref Int32, ref Int32) Swaps the two numbers if the source is larger than the target Declaration public static void SwapIfSourceLarger(this ref int SourceNumber, ref int TargetNumber) Parameters Type Name Description System.Int32 SourceNumber Number System.Int32 TargetNumber Number | Improve this Doc View Source SwapIfSourceLarger(ref UInt32, ref UInt32) Swaps the two numbers if the source is larger than the target Declaration public static void SwapIfSourceLarger(this ref uint SourceNumber, ref uint TargetNumber) Parameters Type Name Description System.UInt32 SourceNumber Number System.UInt32 TargetNumber Number | Improve this Doc View Source SwapIfTargetLarger(ref Int32, ref Int32) Swaps the two numbers if the target is larger than the target Declaration public static void SwapIfTargetLarger(this ref int SourceNumber, ref int TargetNumber) Parameters Type Name Description System.Int32 SourceNumber Number System.Int32 TargetNumber Number | Improve this Doc View Source SwapIfTargetLarger(ref UInt32, ref UInt32) Swaps the two numbers if the target is larger than the target Declaration public static void SwapIfTargetLarger(this ref uint SourceNumber, ref uint TargetNumber) Parameters Type Name Description System.UInt32 SourceNumber Number System.UInt32 TargetNumber Number"
  },
  "api/Extensification.IntegerExts.Querying.html": {
    "href": "api/Extensification.IntegerExts.Querying.html",
    "title": "Class Querying | Extensification API - Eofla Internals",
    "keywords": "Class Querying Provides the integer extensions related to querying Inheritance System.Object Querying Namespace : Extensification.IntegerExts Assembly : Extensification.dll Syntax public static class Querying Methods | Improve this Doc View Source IsArmstrong(Int32) Checks to see if the number is an Armstrong number (sum of cube of each digit of number equals the number itself) Declaration public static bool IsArmstrong(this int Number) Parameters Type Name Description System.Int32 Number Number Returns Type Description System.Boolean True if the number is an Armstrong number; False if not. | Improve this Doc View Source IsArmstrong(UInt32) Checks to see if the number is an Armstrong number (sum of cube of each digit of number equals the number itself) Declaration public static bool IsArmstrong(this uint Number) Parameters Type Name Description System.UInt32 Number Number Returns Type Description System.Boolean True if the number is an Armstrong number; False if not. | Improve this Doc View Source ListDigits(Int32) Makes a list of digits Declaration public static int[] ListDigits(this int Number) Parameters Type Name Description System.Int32 Number Number Returns Type Description System.Int32 [] Array of digits | Improve this Doc View Source ListDigits(UInt32) Makes a list of digits Declaration public static uint[] ListDigits(this uint Number) Parameters Type Name Description System.UInt32 Number Number Returns Type Description System.UInt32 [] Array of digits"
  },
  "api/Extensification.Legacy.StringExts.html": {
    "href": "api/Extensification.Legacy.StringExts.html",
    "title": "Namespace Extensification.Legacy.StringExts | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification.Legacy.StringExts Classes Querying"
  },
  "api/Extensification.Legacy.StringExts.Querying.html": {
    "href": "api/Extensification.Legacy.StringExts.Querying.html",
    "title": "Class Querying | Extensification API - Eofla Internals",
    "keywords": "Class Querying Inheritance System.Object Querying Namespace : Extensification.Legacy.StringExts Assembly : Extensification.Legacy.dll Syntax public static class Querying Methods | Improve this Doc View Source Evaluate(String) Evaluates a string Declaration public static object Evaluate(this string Str) Parameters Type Name Description System.String Str A string Returns Type Description System.Object"
  },
  "api/Extensification.ListExts.Addition.html": {
    "href": "api/Extensification.ListExts.Addition.html",
    "title": "Class Addition | Extensification API - Eofla Internals",
    "keywords": "Class Addition Provides the list extensions related to addition Inheritance System.Object Addition Namespace : Extensification.ListExts Assembly : Extensification.dll Syntax public static class Addition Methods | Improve this Doc View Source AddIfNotFound<T>(List<T>, T) Adds an entry to list if not found Declaration public static void AddIfNotFound<T>(this List<T> TargetList, T Entry) Parameters Type Name Description System.Collections.Generic.List <T> TargetList Target list T Entry An entry to be added Type Parameters Name Description T Type"
  },
  "api/Extensification.ListExts.Conversion.html": {
    "href": "api/Extensification.ListExts.Conversion.html",
    "title": "Class Conversion | Extensification API - Eofla Internals",
    "keywords": "Class Conversion Provides the list extensions related to conversion Inheritance System.Object Conversion Namespace : Extensification.ListExts Assembly : Extensification.dll Syntax public static class Conversion Methods | Improve this Doc View Source ToArrayList<T>(List<T>) Converts list to array list Declaration public static ArrayList ToArrayList<T>(this List<T> TargetList) Parameters Type Name Description System.Collections.Generic.List <T> TargetList Target list Returns Type Description System.Collections.ArrayList Type Parameters Name Description T Type"
  },
  "api/Extensification.ListExts.Counts.html": {
    "href": "api/Extensification.ListExts.Counts.html",
    "title": "Class Counts | Extensification API - Eofla Internals",
    "keywords": "Class Counts Provides the list extensions related to counting Inheritance System.Object Counts Namespace : Extensification.ListExts Assembly : Extensification.dll Syntax public static class Counts Methods | Improve this Doc View Source CountEmptyEntries<T>(List<T>) Gets how many empty items are there Declaration public static int CountEmptyEntries<T>(this List<T> TargetList) Parameters Type Name Description System.Collections.Generic.List <T> TargetList Target list Returns Type Description System.Int32 Count of empty items Type Parameters Name Description T Type | Improve this Doc View Source CountFullEntries<T>(List<T>) Gets how many non-empty items are there Declaration public static int CountFullEntries<T>(this List<T> TargetList) Parameters Type Name Description System.Collections.Generic.List <T> TargetList Target list Returns Type Description System.Int32 Count of non-empty items Type Parameters Name Description T Type"
  },
  "api/Extensification.ListExts.Getting.html": {
    "href": "api/Extensification.ListExts.Getting.html",
    "title": "Class Getting | Extensification API - Eofla Internals",
    "keywords": "Class Getting Provides the list extensions related to getting Inheritance System.Object Getting Namespace : Extensification.ListExts Assembly : Extensification.dll Syntax public static class Getting Methods | Improve this Doc View Source GetIndexesOfEmptyEntries<T>(List<T>) Gets indexes of empty items Declaration public static int[] GetIndexesOfEmptyEntries<T>(this List<T> TargetList) Parameters Type Name Description System.Collections.Generic.List <T> TargetList Target list Returns Type Description System.Int32 [] Indexes of empty items Type Parameters Name Description T Type | Improve this Doc View Source GetIndexesOfFullEntries<T>(List<T>) Gets indexes of non-empty items Declaration public static int[] GetIndexesOfFullEntries<T>(this List<T> TargetList) Parameters Type Name Description System.Collections.Generic.List <T> TargetList Target list Returns Type Description System.Int32 [] Indexes of non-empty items Type Parameters Name Description T Type | Improve this Doc View Source GetIndexFromEntry<T>(List<T>, T) Gets indexes from entry Declaration public static List<int> GetIndexFromEntry<T>(this List<T> TargetList, T Entry) Parameters Type Name Description System.Collections.Generic.List <T> TargetList Target list T Entry An entry Returns Type Description System.Collections.Generic.List < System.Int32 > List of indexes from entry Type Parameters Name Description T Type"
  },
  "api/Extensification.ListExts.html": {
    "href": "api/Extensification.ListExts.html",
    "title": "Namespace Extensification.ListExts | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification.ListExts Classes Addition Provides the list extensions related to addition Conversion Provides the list extensions related to conversion Counts Provides the list extensions related to counting Getting Provides the list extensions related to getting Manipulation Provides the list extensions related to manipulation Querying Provides the list extensions related to querying Removal Provides the list extensions related to removal"
  },
  "api/Extensification.ListExts.Manipulation.html": {
    "href": "api/Extensification.ListExts.Manipulation.html",
    "title": "Class Manipulation | Extensification API - Eofla Internals",
    "keywords": "Class Manipulation Provides the list extensions related to manipulation Inheritance System.Object Manipulation Namespace : Extensification.ListExts Assembly : Extensification.dll Syntax public static class Manipulation Methods | Improve this Doc View Source Stringify(List<Char>) Stringifies the character array (making a string from the character entries found inside the array) Declaration public static string Stringify(this List<char> TargetCharArray) Parameters Type Name Description System.Collections.Generic.List < System.Char > TargetCharArray Character array Returns Type Description System.String"
  },
  "api/Extensification.ListExts.Querying.html": {
    "href": "api/Extensification.ListExts.Querying.html",
    "title": "Class Querying | Extensification API - Eofla Internals",
    "keywords": "Class Querying Provides the list extensions related to querying Inheritance System.Object Querying Namespace : Extensification.ListExts Assembly : Extensification.dll Syntax public static class Querying Methods | Improve this Doc View Source ContainsAllOf<T>(List<T>, T[]) Checks to see if the array contains all of the targets. Declaration public static bool ContainsAllOf<T>(this List<T> TargetArray, T[] Targets) Parameters Type Name Description System.Collections.Generic.List <T> TargetArray Source array T[] Targets Target array Returns Type Description System.Boolean True if all of them are found; else, false. Type Parameters Name Description T | Improve this Doc View Source ContainsAnyOf<T>(List<T>, T[]) Checks to see if the array contains any of the targets. Declaration public static bool ContainsAnyOf<T>(this List<T> TargetArray, T[] Targets) Parameters Type Name Description System.Collections.Generic.List <T> TargetArray Source array T[] Targets Target array Returns Type Description System.Boolean True if all of them are found; else, false. Type Parameters Name Description T"
  },
  "api/Extensification.ListExts.Removal.html": {
    "href": "api/Extensification.ListExts.Removal.html",
    "title": "Class Removal | Extensification API - Eofla Internals",
    "keywords": "Class Removal Provides the list extensions related to removal Inheritance System.Object Removal Namespace : Extensification.ListExts Assembly : Extensification.dll Syntax public static class Removal Methods | Improve this Doc View Source TryRemove<T>(List<T>, T) Tries to remove an entry from the list Declaration public static bool TryRemove<T>(this List<T> TargetList, T Entry) Parameters Type Name Description System.Collections.Generic.List <T> TargetList Target list T Entry An entry to be removed Returns Type Description System.Boolean True if successful; False if unsuccessful Type Parameters Name Description T Type"
  },
  "api/Extensification.LongExts.Conversion.html": {
    "href": "api/Extensification.LongExts.Conversion.html",
    "title": "Class Conversion | Extensification API - Eofla Internals",
    "keywords": "Class Conversion Provides the 64-bit integer extensions related to conversion Inheritance System.Object Conversion Namespace : Extensification.LongExts Assembly : Extensification.dll Syntax public static class Conversion Methods | Improve this Doc View Source ToHumanReadable(Int64, HumanFormats) Converts number to a human readable format with units used Declaration public static string ToHumanReadable(this long Num, HumanFormats Type) Parameters Type Name Description System.Int64 Num Number HumanFormats Type Measurement types Returns Type Description System.String A string containing the processed number and unit | Improve this Doc View Source ToHumanReadable(UInt64, HumanFormats) Converts number to a human readable format with units used Declaration public static string ToHumanReadable(this ulong Num, HumanFormats Type) Parameters Type Name Description System.UInt64 Num Number HumanFormats Type Measurement types Returns Type Description System.String A string containing the processed number and unit"
  },
  "api/Extensification.LongExts.html": {
    "href": "api/Extensification.LongExts.html",
    "title": "Namespace Extensification.LongExts | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification.LongExts Classes Conversion Provides the 64-bit integer extensions related to conversion Manipulation Provides the 64-bit integer extensions related to manipulation Querying Provides the 64-bit integer extensions related to querying"
  },
  "api/Extensification.LongExts.Manipulation.html": {
    "href": "api/Extensification.LongExts.Manipulation.html",
    "title": "Class Manipulation | Extensification API - Eofla Internals",
    "keywords": "Class Manipulation Provides the 64-bit integer extensions related to manipulation Inheritance System.Object Manipulation Namespace : Extensification.LongExts Assembly : Extensification.dll Syntax public static class Manipulation Methods | Improve this Doc View Source Decrement(Int64, Int64) Decrements the number Declaration public static long Decrement(this long Number, long DecrementThreshold) Parameters Type Name Description System.Int64 Number Number System.Int64 DecrementThreshold How many times to decrement Returns Type Description System.Int64 Decremented number | Improve this Doc View Source Decrement(UInt64, UInt64) Decrements the number Declaration public static ulong Decrement(this ulong Number, ulong DecrementThreshold) Parameters Type Name Description System.UInt64 Number Number System.UInt64 DecrementThreshold How many times to decrement Returns Type Description System.UInt64 Decremented number | Improve this Doc View Source Increment(Int64, Int64) Increments the number Declaration public static long Increment(this long Number, long IncrementThreshold) Parameters Type Name Description System.Int64 Number Number System.Int64 IncrementThreshold How many times to increment Returns Type Description System.Int64 Incremented number | Improve this Doc View Source Increment(UInt64, UInt64) Increments the number Declaration public static ulong Increment(this ulong Number, ulong IncrementThreshold) Parameters Type Name Description System.UInt64 Number Number System.UInt64 IncrementThreshold How many times to increment Returns Type Description System.UInt64 Incremented number | Improve this Doc View Source Swap(ref Int64, ref Int64) Swaps the two numbers Declaration public static void Swap(this ref long SourceNumber, ref long TargetNumber) Parameters Type Name Description System.Int64 SourceNumber Number System.Int64 TargetNumber Number | Improve this Doc View Source Swap(ref UInt64, ref UInt64) Swaps the two numbers Declaration public static void Swap(this ref ulong SourceNumber, ref ulong TargetNumber) Parameters Type Name Description System.UInt64 SourceNumber Number System.UInt64 TargetNumber Number | Improve this Doc View Source SwapIfSourceLarger(ref Int64, ref Int64) Swaps the two numbers if the source is larger than the target Declaration public static void SwapIfSourceLarger(this ref long SourceNumber, ref long TargetNumber) Parameters Type Name Description System.Int64 SourceNumber Number System.Int64 TargetNumber Number | Improve this Doc View Source SwapIfSourceLarger(ref UInt64, ref UInt64) Swaps the two numbers if the source is larger than the target Declaration public static void SwapIfSourceLarger(this ref ulong SourceNumber, ref ulong TargetNumber) Parameters Type Name Description System.UInt64 SourceNumber Number System.UInt64 TargetNumber Number | Improve this Doc View Source SwapIfTargetLarger(ref Int64, ref Int64) Swaps the two numbers if the target is larger than the target Declaration public static void SwapIfTargetLarger(this ref long SourceNumber, ref long TargetNumber) Parameters Type Name Description System.Int64 SourceNumber Number System.Int64 TargetNumber Number | Improve this Doc View Source SwapIfTargetLarger(ref UInt64, ref UInt64) Swaps the two numbers if the target is larger than the target Declaration public static void SwapIfTargetLarger(this ref ulong SourceNumber, ref ulong TargetNumber) Parameters Type Name Description System.UInt64 SourceNumber Number System.UInt64 TargetNumber Number"
  },
  "api/Extensification.LongExts.Querying.html": {
    "href": "api/Extensification.LongExts.Querying.html",
    "title": "Class Querying | Extensification API - Eofla Internals",
    "keywords": "Class Querying Provides the 64-bit integer extensions related to querying Inheritance System.Object Querying Namespace : Extensification.LongExts Assembly : Extensification.dll Syntax public static class Querying Methods | Improve this Doc View Source IsArmstrong(Int64) Checks to see if the number is an Armstrong number (sum of cube of each digit of number equals the number itself) Declaration public static bool IsArmstrong(this long Number) Parameters Type Name Description System.Int64 Number Number Returns Type Description System.Boolean True if the number is an Armstrong number; False if not. | Improve this Doc View Source IsArmstrong(UInt64) Checks to see if the number is an Armstrong number (sum of cube of each digit of number equals the number itself) Declaration public static bool IsArmstrong(this ulong Number) Parameters Type Name Description System.UInt64 Number Number Returns Type Description System.Boolean True if the number is an Armstrong number; False if not. | Improve this Doc View Source ListDigits(Int64) Makes a list of digits Declaration public static long[] ListDigits(this long Number) Parameters Type Name Description System.Int64 Number Number Returns Type Description System.Int64 [] Array of digits | Improve this Doc View Source ListDigits(UInt64) Makes a list of digits Declaration public static ulong[] ListDigits(this ulong Number) Parameters Type Name Description System.UInt64 Number Number Returns Type Description System.UInt64 [] Array of digits"
  },
  "api/Extensification.ShortExts.html": {
    "href": "api/Extensification.ShortExts.html",
    "title": "Namespace Extensification.ShortExts | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification.ShortExts Classes Manipulation Provides the 16-bit integer extensions related to manipulation Querying Provides the 16-bit integer extensions related to querying"
  },
  "api/Extensification.ShortExts.Manipulation.html": {
    "href": "api/Extensification.ShortExts.Manipulation.html",
    "title": "Class Manipulation | Extensification API - Eofla Internals",
    "keywords": "Class Manipulation Provides the 16-bit integer extensions related to manipulation Inheritance System.Object Manipulation Namespace : Extensification.ShortExts Assembly : Extensification.dll Syntax public static class Manipulation Methods | Improve this Doc View Source Decrement(Int16, Int16) Decrements the number Declaration public static short Decrement(this short Number, short DecrementThreshold) Parameters Type Name Description System.Int16 Number Number System.Int16 DecrementThreshold How many times to decrement Returns Type Description System.Int16 Decremented number | Improve this Doc View Source Decrement(UInt16, UInt16) Decrements the number Declaration public static ushort Decrement(this ushort Number, ushort DecrementThreshold) Parameters Type Name Description System.UInt16 Number Number System.UInt16 DecrementThreshold How many times to decrement Returns Type Description System.UInt16 Decremented number | Improve this Doc View Source Increment(Int16, Int16) Increments the number Declaration public static short Increment(this short Number, short IncrementThreshold) Parameters Type Name Description System.Int16 Number Number System.Int16 IncrementThreshold How many times to increment Returns Type Description System.Int16 Incremented number | Improve this Doc View Source Increment(UInt16, UInt16) Increments the number Declaration public static ushort Increment(this ushort Number, ushort IncrementThreshold) Parameters Type Name Description System.UInt16 Number Number System.UInt16 IncrementThreshold How many times to increment Returns Type Description System.UInt16 Incremented number | Improve this Doc View Source Swap(ref Int16, ref Int16) Swaps the two numbers Declaration public static void Swap(this ref short SourceNumber, ref short TargetNumber) Parameters Type Name Description System.Int16 SourceNumber Number System.Int16 TargetNumber Number | Improve this Doc View Source Swap(ref UInt16, ref UInt16) Swaps the two numbers Declaration public static void Swap(this ref ushort SourceNumber, ref ushort TargetNumber) Parameters Type Name Description System.UInt16 SourceNumber Number System.UInt16 TargetNumber Number | Improve this Doc View Source SwapIfSourceLarger(ref Int16, ref Int16) Swaps the two numbers if the source is larger than the target Declaration public static void SwapIfSourceLarger(this ref short SourceNumber, ref short TargetNumber) Parameters Type Name Description System.Int16 SourceNumber Number System.Int16 TargetNumber Number | Improve this Doc View Source SwapIfSourceLarger(ref UInt16, ref UInt16) Swaps the two numbers if the source is larger than the target Declaration public static void SwapIfSourceLarger(this ref ushort SourceNumber, ref ushort TargetNumber) Parameters Type Name Description System.UInt16 SourceNumber Number System.UInt16 TargetNumber Number | Improve this Doc View Source SwapIfTargetLarger(ref Int16, ref Int16) Swaps the two numbers if the target is larger than the target Declaration public static void SwapIfTargetLarger(this ref short SourceNumber, ref short TargetNumber) Parameters Type Name Description System.Int16 SourceNumber Number System.Int16 TargetNumber Number | Improve this Doc View Source SwapIfTargetLarger(ref UInt16, ref UInt16) Swaps the two numbers if the target is larger than the target Declaration public static void SwapIfTargetLarger(this ref ushort SourceNumber, ref ushort TargetNumber) Parameters Type Name Description System.UInt16 SourceNumber Number System.UInt16 TargetNumber Number"
  },
  "api/Extensification.ShortExts.Querying.html": {
    "href": "api/Extensification.ShortExts.Querying.html",
    "title": "Class Querying | Extensification API - Eofla Internals",
    "keywords": "Class Querying Provides the 16-bit integer extensions related to querying Inheritance System.Object Querying Namespace : Extensification.ShortExts Assembly : Extensification.dll Syntax public static class Querying Methods | Improve this Doc View Source IsArmstrong(Int16) Checks to see if the number is an Armstrong number (sum of cube of each digit of number equals the number itself) Declaration public static bool IsArmstrong(this short Number) Parameters Type Name Description System.Int16 Number Number Returns Type Description System.Boolean True if the number is an Armstrong number; False if not. | Improve this Doc View Source IsArmstrong(UInt16) Checks to see if the number is an Armstrong number (sum of cube of each digit of number equals the number itself) Declaration public static bool IsArmstrong(this ushort Number) Parameters Type Name Description System.UInt16 Number Number Returns Type Description System.Boolean True if the number is an Armstrong number; False if not. | Improve this Doc View Source ListDigits(Int16) Makes a list of digits Declaration public static short[] ListDigits(this short Number) Parameters Type Name Description System.Int16 Number Number Returns Type Description System.Int16 [] Array of digits | Improve this Doc View Source ListDigits(UInt16) Makes a list of digits Declaration public static ushort[] ListDigits(this ushort Number) Parameters Type Name Description System.UInt16 Number Number Returns Type Description System.UInt16 [] Array of digits"
  },
  "api/Extensification.SingleExts.html": {
    "href": "api/Extensification.SingleExts.html",
    "title": "Namespace Extensification.SingleExts | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification.SingleExts Classes Manipulation Provides the single-precision number extensions related to manipulation Querying Provides the single-precision number extensions related to querying"
  },
  "api/Extensification.SingleExts.Manipulation.html": {
    "href": "api/Extensification.SingleExts.Manipulation.html",
    "title": "Class Manipulation | Extensification API - Eofla Internals",
    "keywords": "Class Manipulation Provides the single-precision number extensions related to manipulation Inheritance System.Object Manipulation Namespace : Extensification.SingleExts Assembly : Extensification.dll Syntax public static class Manipulation Methods | Improve this Doc View Source Decrement(Single, Single) Decrements the number Declaration public static float Decrement(this float Number, float DecrementThreshold) Parameters Type Name Description System.Single Number Number System.Single DecrementThreshold How many times to decrement Returns Type Description System.Single Decremented number | Improve this Doc View Source Increment(Single, Single) Increments the number Declaration public static float Increment(this float Number, float IncrementThreshold) Parameters Type Name Description System.Single Number Number System.Single IncrementThreshold How many times to increment Returns Type Description System.Single Incremented number | Improve this Doc View Source Swap(ref Single, ref Single) Swaps the two numbers Declaration public static void Swap(this ref float SourceNumber, ref float TargetNumber) Parameters Type Name Description System.Single SourceNumber Number System.Single TargetNumber Number | Improve this Doc View Source SwapIfSourceLarger(ref Single, ref Single) Swaps the two numbers if the source is larger than the target Declaration public static void SwapIfSourceLarger(this ref float SourceNumber, ref float TargetNumber) Parameters Type Name Description System.Single SourceNumber Number System.Single TargetNumber Number | Improve this Doc View Source SwapIfTargetLarger(ref Single, ref Single) Swaps the two numbers if the target is larger than the target Declaration public static void SwapIfTargetLarger(this ref float SourceNumber, ref float TargetNumber) Parameters Type Name Description System.Single SourceNumber Number System.Single TargetNumber Number"
  },
  "api/Extensification.SingleExts.Querying.html": {
    "href": "api/Extensification.SingleExts.Querying.html",
    "title": "Class Querying | Extensification API - Eofla Internals",
    "keywords": "Class Querying Provides the single-precision number extensions related to querying Inheritance System.Object Querying Namespace : Extensification.SingleExts Assembly : Extensification.dll Syntax public static class Querying Methods | Improve this Doc View Source IsArmstrong(Single) Checks to see if the number is an Armstrong number (sum of cube of each digit of number equals the number itself) Declaration public static bool IsArmstrong(this float Number) Parameters Type Name Description System.Single Number Number Returns Type Description System.Boolean True if the number is an Armstrong number; False if not. | Improve this Doc View Source ListDigitsAfterDecimal(Single) Makes a list of digits after the decimal point Declaration public static float[] ListDigitsAfterDecimal(this float Number) Parameters Type Name Description System.Single Number Number Returns Type Description System.Single [] Array of digits | Improve this Doc View Source ListDigitsBeforeDecimal(Single) Makes a list of digits before the decimal point Declaration public static float[] ListDigitsBeforeDecimal(this float Number) Parameters Type Name Description System.Single Number Number Returns Type Description System.Single [] Array of digits"
  },
  "api/Extensification.StreamExts.html": {
    "href": "api/Extensification.StreamExts.html",
    "title": "Namespace Extensification.StreamExts | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification.StreamExts Classes Manipulation Provides manipulation extenstions to System.IO.Stream Reading Provides reading extenstions to System.IO.Stream Writing Provides writing extenstions to System.IO.Stream"
  },
  "api/Extensification.StreamExts.Manipulation.html": {
    "href": "api/Extensification.StreamExts.Manipulation.html",
    "title": "Class Manipulation | Extensification API - Eofla Internals",
    "keywords": "Class Manipulation Provides manipulation extenstions to System.IO.Stream Inheritance System.Object Manipulation Namespace : Extensification.StreamExts Assembly : Extensification.dll Syntax public static class Manipulation Methods | Improve this Doc View Source TryFlush(Stream) Tries flushing the stream Declaration public static bool TryFlush(this Stream TargetStream) Parameters Type Name Description System.IO.Stream TargetStream Returns Type Description System.Boolean True if successful; False if unsuccessful | Improve this Doc View Source TrySeek(Stream, Int64, SeekOrigin) Tries seeking the stream Declaration public static bool TrySeek(this Stream TargetStream, long Offset, SeekOrigin Origin) Parameters Type Name Description System.IO.Stream TargetStream System.Int64 Offset System.IO.SeekOrigin Origin Returns Type Description System.Boolean True if successful; False if unsuccessful | Improve this Doc View Source TrySetLength(Stream, Int64) Tries setting the length of the stream Declaration public static bool TrySetLength(this Stream TargetStream, long Length) Parameters Type Name Description System.IO.Stream TargetStream System.Int64 Length Returns Type Description System.Boolean True if successful; False if unsuccessful"
  },
  "api/Extensification.StreamExts.Reading.html": {
    "href": "api/Extensification.StreamExts.Reading.html",
    "title": "Class Reading | Extensification API - Eofla Internals",
    "keywords": "Class Reading Provides reading extenstions to System.IO.Stream Inheritance System.Object Reading Namespace : Extensification.StreamExts Assembly : Extensification.dll Syntax public static class Reading Methods | Improve this Doc View Source ReadAndSeek(Stream, Byte[], Int32, Int32) Reads from the stream and seeks the stream to the beginning, if possible. Declaration public static int ReadAndSeek(this Stream TargetStream, byte[] Buffer, int Offset, int Count) Parameters Type Name Description System.IO.Stream TargetStream System.Byte [] Buffer System.Int32 Offset System.Int32 Count Returns Type Description System.Int32 True if successful; False if unsuccessful | Improve this Doc View Source TryRead(Stream, Byte[], Int32, Int32) Tries reading from the stream Declaration public static bool TryRead(this Stream TargetStream, byte[] Buffer, int Offset, int Count) Parameters Type Name Description System.IO.Stream TargetStream System.Byte [] Buffer System.Int32 Offset System.Int32 Count Returns Type Description System.Boolean True if successful; False if unsuccessful | Improve this Doc View Source TryReadByte(Stream) Tries reading a byte from the stream Declaration public static int TryReadByte(this Stream TargetStream) Parameters Type Name Description System.IO.Stream TargetStream Returns Type Description System.Int32 Byte number if successful; -1 if at end of stream; -2 if error occurred"
  },
  "api/Extensification.StreamExts.Writing.html": {
    "href": "api/Extensification.StreamExts.Writing.html",
    "title": "Class Writing | Extensification API - Eofla Internals",
    "keywords": "Class Writing Provides writing extenstions to System.IO.Stream Inheritance System.Object Writing Namespace : Extensification.StreamExts Assembly : Extensification.dll Syntax public static class Writing Methods | Improve this Doc View Source TryWrite(Stream, Byte[], Int32, Int32) Tries writing to the stream Declaration public static bool TryWrite(this Stream TargetStream, byte[] Buffer, int Offset, int Count) Parameters Type Name Description System.IO.Stream TargetStream System.Byte [] Buffer System.Int32 Offset System.Int32 Count Returns Type Description System.Boolean True if successful; False if unsuccessful | Improve this Doc View Source TryWriteByte(Stream, Byte) Tries writing to the stream Declaration public static bool TryWriteByte(this Stream TargetStream, byte Value) Parameters Type Name Description System.IO.Stream TargetStream System.Byte Value Returns Type Description System.Boolean True if successful; False if unsuccessful | Improve this Doc View Source WriteAndSeek(Stream, Byte[], Int32, Int32) Writes to the stream and seeks the stream to the beginning, if possible. Declaration public static void WriteAndSeek(this Stream TargetStream, byte[] Buffer, int Offset, int Count) Parameters Type Name Description System.IO.Stream TargetStream System.Byte [] Buffer System.Int32 Offset System.Int32 Count"
  },
  "api/Extensification.StreamReaderExts.html": {
    "href": "api/Extensification.StreamReaderExts.html",
    "title": "Namespace Extensification.StreamReaderExts | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification.StreamReaderExts Classes Reading Provides reading extenstions to System.IO.StreamReader"
  },
  "api/Extensification.StreamReaderExts.Reading.html": {
    "href": "api/Extensification.StreamReaderExts.Reading.html",
    "title": "Class Reading | Extensification API - Eofla Internals",
    "keywords": "Class Reading Provides reading extenstions to System.IO.StreamReader Inheritance System.Object Reading Namespace : Extensification.StreamReaderExts Assembly : Extensification.dll Syntax public static class Reading Methods | Improve this Doc View Source ReadLines(StreamReader) Reads all the lines and returns the string array Declaration public static string[] ReadLines(this StreamReader reader) Parameters Type Name Description System.IO.StreamReader reader The stream reader Returns Type Description System.String [] | Improve this Doc View Source ReadLineWithNewLine(StreamReader) Reads a line from the stream with the newline characters Declaration public static string ReadLineWithNewLine(this StreamReader reader) Parameters Type Name Description System.IO.StreamReader reader The stream reader Returns Type Description System.String | Improve this Doc View Source ReadToEndAndSeek(StreamReader) Reads all the characters in the stream until the end and seeks the stream to the beginning, if possible. Declaration public static string ReadToEndAndSeek(this StreamReader reader) Parameters Type Name Description System.IO.StreamReader reader The stream reader Returns Type Description System.String"
  },
  "api/Extensification.StreamWriterExts.html": {
    "href": "api/Extensification.StreamWriterExts.html",
    "title": "Namespace Extensification.StreamWriterExts | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification.StreamWriterExts Classes Writing Provides writing extenstions to System.IO.StreamWriter"
  },
  "api/Extensification.StreamWriterExts.Writing.html": {
    "href": "api/Extensification.StreamWriterExts.Writing.html",
    "title": "Class Writing | Extensification API - Eofla Internals",
    "keywords": "Class Writing Provides writing extenstions to System.IO.StreamWriter Inheritance System.Object Writing Namespace : Extensification.StreamWriterExts Assembly : Extensification.dll Syntax public static class Writing Methods | Improve this Doc View Source WriteLineAndSeek(StreamWriter, String) Writes the line to the stream and seeks to the beginning, if possible. Declaration public static void WriteLineAndSeek(this StreamWriter writer, string Line) Parameters Type Name Description System.IO.StreamWriter writer The stream writer System.String Line Line to write | Improve this Doc View Source WriteLines(StreamWriter, String[]) Writes all the lines to the stream and seeks to the beginning, if possible. Declaration public static void WriteLines(this StreamWriter writer, string[] Lines) Parameters Type Name Description System.IO.StreamWriter writer The stream writer System.String [] Lines Lines to write"
  },
  "api/Extensification.StringExts.Conversion.html": {
    "href": "api/Extensification.StringExts.Conversion.html",
    "title": "Class Conversion | Extensification API - Eofla Internals",
    "keywords": "Class Conversion Provides the string extensions related to conversion Inheritance System.Object Conversion Namespace : Extensification.StringExts Assembly : Extensification.dll Syntax public static class Conversion Methods | Improve this Doc View Source ConvertFromHexToRgb(String, ref Int32, ref Int32, ref Int32) Converts from hexadecimal string representation of color to RGB values Declaration public static void ConvertFromHexToRgb(this string source, ref int R, ref int G, ref int B) Parameters Type Name Description System.String source A string which has the specified text to replace System.Int32 R Red level to be filled System.Int32 G Green level to be filled System.Int32 B Blue level to be filled | Improve this Doc View Source ConvertVTSequences(String) Converts all of the VT sequence numbers enclosed in < and > marks to their appropriate VT sequence. For example, <38;5;5> will be converted to Convert.ToChar(&H1B)[38;5;5. Note that if you write spaces between < and > marks, it will not parse it. Declaration public static string ConvertVTSequences(this string Str) Parameters Type Name Description System.String Str Target string Returns Type Description System.String"
  },
  "api/Extensification.StringExts.html": {
    "href": "api/Extensification.StringExts.html",
    "title": "Namespace Extensification.StringExts | Extensification API - Eofla Internals",
    "keywords": "Namespace Extensification.StringExts Classes Conversion Provides the string extensions related to conversion Manipulation Provides the string extensions related to manipulation Querying Provides the string extensions related to querying Removal Provides the string extensions related to removal"
  },
  "api/Extensification.StringExts.Manipulation.html": {
    "href": "api/Extensification.StringExts.Manipulation.html",
    "title": "Class Manipulation | Extensification API - Eofla Internals",
    "keywords": "Class Manipulation Provides the string extensions related to manipulation Inheritance System.Object Manipulation Namespace : Extensification.StringExts Assembly : Extensification.dll Syntax public static class Manipulation Methods | Improve this Doc View Source EncloseByDoubleQuotes(String) Encloses a string by double quotations Declaration public static string EncloseByDoubleQuotes(this string Str) Parameters Type Name Description System.String Str Target string Returns Type Description System.String Enclosed string | Improve this Doc View Source FormatString(String, Object[]) Formats the string Declaration public static string FormatString(this string Str, params object[] Variables) Parameters Type Name Description System.String Str Target string that has {0}, {1}, ... System.Object [] Variables Variables being used Returns Type Description System.String Formatted string | Improve this Doc View Source LowerFirst(String) Makes the first character of the string lowercase Declaration public static string LowerFirst(this string Str) Parameters Type Name Description System.String Str The target string Returns Type Description System.String A string that has its first character being made lowercase | Improve this Doc View Source ReleaseDoubleQuotes(String) Releases a string from double quotations Declaration public static string ReleaseDoubleQuotes(this string Str) Parameters Type Name Description System.String Str Target string Returns Type Description System.String Released string | Improve this Doc View Source Repeat(String, Int64) Repeats a string 'n' times Declaration public static string Repeat(this string Str, long Times) Parameters Type Name Description System.String Str Target string System.Int64 Times Number of times to be repeated Returns Type Description System.String | Improve this Doc View Source ReplaceAll(String, String[], String) Replaces all the instances of strings with a string Declaration public static string ReplaceAll(this string Str, string[] ToBeReplaced, string ToReplace) Parameters Type Name Description System.String Str Target string System.String [] ToBeReplaced Strings to be replaced System.String ToReplace String to replace with Returns Type Description System.String Modified string Exceptions Type Condition System.ArgumentNullException | Improve this Doc View Source ReplaceAllRange(String, String[], String[]) Replaces all the instances of strings with a string assigned to each entry Declaration public static string ReplaceAllRange(this string Str, string[] ToBeReplaced, string[] ToReplace) Parameters Type Name Description System.String Str Target string System.String [] ToBeReplaced Strings to be replaced System.String [] ToReplace Strings to replace with Returns Type Description System.String Modified string Exceptions Type Condition System.ArgumentNullException System.ArgumentException | Improve this Doc View Source ReplaceLastOccurrence(String, String, String) Replaces last occurrence of a text in source string with the replacement Declaration public static string ReplaceLastOccurrence(this string source, string searchText, string replace) Parameters Type Name Description System.String source A string which has the specified text to replace System.String searchText A string to be replaced System.String replace A string to replace Returns Type Description System.String String that has its last occurrence of text replaced | Improve this Doc View Source Reverse(String) Reverses the order of characters in a string Declaration public static string Reverse(this string Str) Parameters Type Name Description System.String Str Target string Returns Type Description System.String | Improve this Doc View Source ShiftLetters(String, Int32) Shifts letters in a string either backwards or forward. Declaration public static string ShiftLetters(this string Str, int ShiftThreshold) Parameters Type Name Description System.String Str Target string System.Int32 ShiftThreshold How many times to shift. If the threshold is negative, the shifting will go backwards. If the threshold is positive, the shifting will go forward. Returns Type Description System.String Shifted string | Improve this Doc View Source Substring(String, Int32, Int32) Retrieves a substring from this instance. The substring starts at a specified starting position and ends at a specified ending position Declaration public static string Substring(this string Str, int Start, int Finish) Parameters Type Name Description System.String Str Target string System.Int32 Start Start position System.Int32 Finish Finish position Returns Type Description System.String | Improve this Doc View Source ToMockCase(String) Makes the string have the MoCk CaSE Declaration public static string ToMockCase(this string Str) Parameters Type Name Description System.String Str String to be MoCKeD Returns Type Description System.String The mOcKEd string | Improve this Doc View Source ToMockCase(String, Int32) Makes the string have the MoCk CaSE Declaration public static string ToMockCase(this string Str, int mockProbability) Parameters Type Name Description System.String Str String to be MoCKeD System.Int32 mockProbability Mock probability in percent (0-100) Returns Type Description System.String The mOcKEd string | Improve this Doc View Source ToTitleCase(String) Makes the string have the title case Declaration public static string ToTitleCase(this string Str) Parameters Type Name Description System.String Str String to be titled Returns Type Description System.String The titled string | Improve this Doc View Source Truncate(String, Int32) Truncates the string if the string is larger than the threshold, otherwise, returns an unchanged string Declaration public static string Truncate(this string str, int threshold) Parameters Type Name Description System.String str Source string to truncate System.Int32 threshold Max number of string characters Returns Type Description System.String Truncated string | Improve this Doc View Source UpperFirst(String) Makes the first character of the string uppercase Declaration public static string UpperFirst(this string Str) Parameters Type Name Description System.String Str The target string Returns Type Description System.String A string that has its first character being made uppercase"
  },
  "api/Extensification.StringExts.Querying.html": {
    "href": "api/Extensification.StringExts.Querying.html",
    "title": "Class Querying | Extensification API - Eofla Internals",
    "keywords": "Class Querying Provides the string extensions related to querying Inheritance System.Object Querying Namespace : Extensification.StringExts Assembly : Extensification.dll Syntax public static class Querying Methods | Improve this Doc View Source AllIndexesOf(String, String) Get all indexes of a value in string Declaration public static IEnumerable<int> AllIndexesOf(this string Str, string value) Parameters Type Name Description System.String Str Source string System.String value A value Returns Type Description System.Collections.Generic.IEnumerable < System.Int32 > Indexes of strings | Improve this Doc View Source ContainsAllOf(String, String[]) Checks to see if the string contains all of the target strings. Declaration public static bool ContainsAllOf(this string Str, string[] Targets) Parameters Type Name Description System.String Str Source string System.String [] Targets Target strings Returns Type Description System.Boolean True if all of them are found; else, false. | Improve this Doc View Source ContainsAnyOf(String, String[]) Checks to see if the string contains any of the target strings. Declaration public static bool ContainsAnyOf(this string Str, string[] Targets) Parameters Type Name Description System.String Str Source string System.String [] Targets Target strings Returns Type Description System.Boolean True if one of them is found; else, false. | Improve this Doc View Source EndsWithAllOf(String, String[]) Checks to see if the string ends with all of the values Declaration public static bool EndsWithAllOf(this string Str, string[] Values) Parameters Type Name Description System.String Str Target string System.String [] Values Values Returns Type Description System.Boolean | Improve this Doc View Source EndsWithAnyOf(String, String[]) Checks to see if the string ends with any of the values Declaration public static bool EndsWithAnyOf(this string Str, string[] Values) Parameters Type Name Description System.String Str Target string System.String [] Values Values Returns Type Description System.Boolean | Improve this Doc View Source GetAsciiCode(String, Int32) Gets an ASCII code for a character Declaration public static byte GetAsciiCode(this string Str, int CharacterNum) Parameters Type Name Description System.String Str Target string System.Int32 CharacterNum A zero-based character number Returns Type Description System.Byte | Improve this Doc View Source GetAsciiCodes(String) Gets list of ASCII codes from a string Declaration public static byte[] GetAsciiCodes(this string Str) Parameters Type Name Description System.String Str Returns Type Description System.Byte [] | Improve this Doc View Source GetListOfRepeatedLetters(String) Gets the list of repeated letters Declaration public static Dictionary<char, int> GetListOfRepeatedLetters(this string Str) Parameters Type Name Description System.String Str Target string Returns Type Description System.Collections.Generic.Dictionary < System.Char , System.Int32 > | Improve this Doc View Source LRP(String, Int32) Gets how many times does the program need to step n times on the string until it reaches the end of string. Declaration public static int LRP(this string Str, int Steps) Parameters Type Name Description System.String Str Target string System.Int32 Steps Number of characters to step on Returns Type Description System.Int32 | Improve this Doc View Source SplitEncloseDoubleQuotes(String, String[]) Splits the string enclosed in double quotes Declaration public static string[] SplitEncloseDoubleQuotes(this string Str, params string[] Delims) Parameters Type Name Description System.String Str Target string System.String [] Delims Delimiters Returns Type Description System.String [] | Improve this Doc View Source SplitNewLines(String) Makes a string array with new line as delimiter Declaration public static string[] SplitNewLines(this string Str) Parameters Type Name Description System.String Str Target string Returns Type Description System.String [] | Improve this Doc View Source SplitNewLinesCr(String) Makes a string array with new line (vbCr) as delimiter Declaration public static string[] SplitNewLinesCr(this string Str) Parameters Type Name Description System.String Str Target string Returns Type Description System.String [] | Improve this Doc View Source SplitSpacesEncloseDoubleQuotes(String) Splits the string enclosed in double quotes delimited by spaces using regular expression formula Declaration public static string[] SplitSpacesEncloseDoubleQuotes(this string Str) Parameters Type Name Description System.String Str Target string Returns Type Description System.String [] | Improve this Doc View Source StartsWithAllOf(String, String[]) Checks to see if the string starts with all of the values Declaration public static bool StartsWithAllOf(this string Str, string[] Values) Parameters Type Name Description System.String Str Target string System.String [] Values Values Returns Type Description System.Boolean | Improve this Doc View Source StartsWithAnyOf(String, String[]) Checks to see if the string starts with any of the values Declaration public static bool StartsWithAnyOf(this string Str, string[] Values) Parameters Type Name Description System.String Str Target string System.String [] Values Values Returns Type Description System.Boolean"
  },
  "api/Extensification.StringExts.Removal.html": {
    "href": "api/Extensification.StringExts.Removal.html",
    "title": "Class Removal | Extensification API - Eofla Internals",
    "keywords": "Class Removal Provides the string extensions related to removal Inheritance System.Object Removal Namespace : Extensification.StringExts Assembly : Extensification.dll Syntax public static class Removal Methods | Improve this Doc View Source RemoveLetter(String, Int32) Removes a letter from a string Declaration public static string RemoveLetter(this string Str, int CharacterNum) Parameters Type Name Description System.String Str Target string System.Int32 CharacterNum A zero-based character number Returns Type Description System.String | Improve this Doc View Source RemoveLettersRange(String, Char[]) Removes a range of letters from a string Declaration public static string RemoveLettersRange(this string Str, char[] Characters) Parameters Type Name Description System.String Str Target string System.Char [] Characters Array of characters to be remove Returns Type Description System.String | Improve this Doc View Source RemoveNullsOrWhitespacesAtTheBeginning(String) Removes null characters or whitespaces at the beginning of the string Declaration public static string RemoveNullsOrWhitespacesAtTheBeginning(this string Str) Parameters Type Name Description System.String Str Target string Returns Type Description System.String | Improve this Doc View Source RemoveNullsOrWhitespacesAtTheEnd(String) Removes null characters or whitespaces at the end of the string Declaration public static string RemoveNullsOrWhitespacesAtTheEnd(this string Str) Parameters Type Name Description System.String Str Target string Returns Type Description System.String | Improve this Doc View Source RemoveSpacesFromBeginning(String) Removes spaces from the beginning of the string Declaration public static string RemoveSpacesFromBeginning(this string Str) Parameters Type Name Description System.String Str Target string Returns Type Description System.String Modified string"
  },
  "index.html": {
    "href": "index.html",
    "title": "What is Extensification? | Extensification API - Eofla Internals",
    "keywords": "What is Extensification? Extensification is a library that has extension methods for various types, like strings, integers, and more. It was initially bundled with Kernel Simulator as a side project, but we decided to split the methods in it to this library. What is this web page? This webpage is an API documentation for mod developers to be used as reference. It constantly gets updated as we push the updates to the main and servicing versions of this project. If you still intend to use a documentation specific to your preferred version of Extensification, you may refer to the releases page of the project and download the attached <version>-doc.rar file. To get started using the documentation, select API Documentation from the top menu and select a namespace to get a clear overview of the API. Feedback If you wish to leave feedback to us about this API reference website, use the issue tracker of the project. If you wish to contribute to the documentation of the API, go to the project source code and make your improvements there on a draft Pull Request ; we don't support override files that are made by clicking on Improve this doc . Any meaningful contributions are welcome. Copyright (c) 2022 Aptivi and its companies. All rights reserved."
  },
  "wiki/Home.html": {
    "href": "wiki/Home.html",
    "title": "| Extensification API - Eofla Internals",
    "keywords": "To be filled."
  }
}